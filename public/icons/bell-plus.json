{
  "name": "bell-plus",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "keywords": [
    "notification",
    "reminder",
    "add",
    "create",
    "new",
    "subscribe",
    "enable"
  ],
  "files": [
    {
      "path": "BellPlusIcon.tsx",
      "content": "\"use client\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\r\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\r\n\r\nexport interface BellPlusIconHandle {\r\n\tstartAnimation: () => void;\r\n\tstopAnimation: () => void;\r\n}\r\n\r\ninterface BellPlusIconProps extends HTMLMotionProps<\"div\"> {\r\n\tsize?: number;\r\n}\r\n\r\nconst BellPlusIcon = forwardRef<BellPlusIconHandle, BellPlusIconProps>(\r\n\t({ onMouseEnter, onMouseLeave, className, size = 28, ...props }, ref) => {\r\n\t\tconst controls = useAnimation();\r\n\t\tconst reduced = useReducedMotion();\r\n\t\tconst isControlled = useRef(false);\r\n\r\n\t\tuseImperativeHandle(ref, () => {\r\n\t\t\tisControlled.current = true;\r\n\t\t\treturn {\r\n\t\t\t\tstartAnimation: () =>\r\n\t\t\t\t\treduced ? controls.start(\"normal\") : controls.start(\"animate\"),\r\n\t\t\t\tstopAnimation: () => controls.start(\"normal\"),\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tconst handleEnter = useCallback(\r\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\r\n\t\t\t\tif (reduced) return;\r\n\t\t\t\tif (!isControlled.current) controls.start(\"animate\");\r\n\t\t\t\telse onMouseEnter?.(e as any);\r\n\t\t\t},\r\n\t\t\t[controls, reduced, onMouseEnter],\r\n\t\t);\r\n\r\n\t\tconst handleLeave = useCallback(\r\n\t\t\t(e: React.MouseEvent<HTMLDivElement>) => {\r\n\t\t\t\tif (!isControlled.current) {\r\n\t\t\t\t\tcontrols.start(\"normal\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tonMouseLeave?.(e as any);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t[controls, onMouseLeave],\r\n\t\t);\r\n\r\n\t\tconst bellVariants: Variants = {\r\n\t\t\tnormal: { rotate: 0 },\r\n\t\t\tanimate: {\r\n\t\t\t\trotate: [0, -12, 10, -6, 3, 0],\r\n\t\t\t\ttransition: { duration: 1.4, ease: \"easeInOut\", repeat: 0 },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst clapperVariants: Variants = {\r\n\t\t\tnormal: { x: 0 },\r\n\t\t\tanimate: {\r\n\t\t\t\tx: [0, -3, 3, -2, 2, 0],\r\n\t\t\t\ttransition: { duration: 1.4, ease: \"easeInOut\", repeat: 0 },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst plusVariants: Variants = {\r\n\t\t\tnormal: { scale: 1, opacity: 1, rotate: 0 },\r\n\t\t\tanimate: {\r\n\t\t\t\tscale: [1, 1.3, 0.9, 1.1, 1],\r\n\t\t\t\trotate: [0, 45, -45, 0],\r\n\t\t\t\topacity: [1, 0.9, 1],\r\n\t\t\t\ttransition: { duration: 1.4, ease: \"easeInOut\", repeat: 0 },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<motion.div\r\n\t\t\t\tclassName={cn(\"relative inline-flex\", className)}\r\n\t\t\t\tonMouseEnter={handleEnter}\r\n\t\t\t\tonMouseLeave={handleLeave}\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t<motion.svg\r\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\twidth={size}\r\n\t\t\t\t\theight={size}\r\n\t\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\tstrokeWidth=\"2\"\r\n\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t\tstrokeLinejoin=\"round\"\r\n\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\tvariants={bellVariants}\r\n\t\t\t\t>\r\n\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\td=\"M10.268 21a2 2 0 0 0 3.464 0\"\r\n\t\t\t\t\t\tvariants={clapperVariants}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<motion.path d=\"M15 8h6\" variants={plusVariants} />\r\n\t\t\t\t\t<motion.path d=\"M18 5v6\" variants={plusVariants} />\r\n\t\t\t\t\t<path d=\"M20.002 14.464a9 9 0 0 0 .738.863A1 1 0 0 1 20 17H4a1 1 0 0 1-.74-1.673C4.59 13.956 6 12.499 6 8a6 6 0 0 1 8.75-5.332\" />\r\n\t\t\t\t</motion.svg>\r\n\t\t\t</motion.div>\r\n\t\t);\r\n\t},\r\n);\r\n\r\nBellPlusIcon.displayName = \"BellPlusIcon\";\r\nexport { BellPlusIcon };\r\n",
      "type": "registry:ui"
    }
  ]
}