{
  "name": "signal",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "keywords": [
    "wifi",
    "connection",
    "network",
    "bars",
    "cellular",
    "reception",
    "coverage",
    "strength",
    "data",
    "internet",
    "wireless",
    "hotspot",
    "signal",
    "antenna",
    "tower"
  ],
  "files": [
    {
      "path": "SignalIcon.tsx",
      "content": "\"use client\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\r\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\r\n\r\nexport interface SignalHandle {\r\n\tstartAnimation: () => void;\r\n\tstopAnimation: () => void;\r\n}\r\n\r\ninterface SignalProps extends HTMLMotionProps<\"div\"> {\r\n\tsize?: number;\r\n}\r\n\r\nconst SignalIcon = forwardRef<SignalHandle, SignalProps>(\r\n\t({ onMouseEnter, onMouseLeave, className, size = 28, ...props }, ref) => {\r\n\t\tconst controls = useAnimation();\r\n\t\tconst reduced = useReducedMotion();\r\n\t\tconst isControlled = useRef(false);\r\n\r\n\t\tuseImperativeHandle(ref, () => {\r\n\t\t\tisControlled.current = true;\r\n\t\t\treturn {\r\n\t\t\t\tstartAnimation: () =>\r\n\t\t\t\t\treduced ? controls.start(\"normal\") : controls.start(\"animate\"),\r\n\t\t\t\tstopAnimation: () => controls.start(\"normal\"),\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tconst handleEnter = useCallback(() => {\r\n\t\t\tif (reduced) return;\r\n\t\t\tif (!isControlled.current) controls.start(\"animate\");\r\n\t\t}, [controls, reduced]);\r\n\r\n\t\tconst handleLeave = useCallback(() => {\r\n\t\t\tif (!isControlled.current) controls.start(\"normal\");\r\n\t\t}, [controls]);\r\n\r\n\t\tconst svgVariants: Variants = {\r\n\t\t\tnormal: { scale: 1, rotate: 0 },\r\n\t\t\tanimate: {\r\n\t\t\t\tscale: [1, 1.05, 1],\r\n\t\t\t\ttransition: { duration: 1, ease: \"easeInOut\" },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst dotVariants: Variants = {\r\n\t\t\tnormal: { scale: 1, opacity: 0.8 },\r\n\t\t\tanimate: {\r\n\t\t\t\tscale: [1, 1.3, 1],\r\n\t\t\t\topacity: [0.5, 1, 0.8],\r\n\t\t\t\ttransition: { duration: 0.5, ease: \"easeInOut\" },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst barPulse = (delay: number): Variants => ({\r\n\t\t\tnormal: { scaleY: 1, opacity: 0.9, transformOrigin: \"center bottom\" },\r\n\t\t\tanimate: {\r\n\t\t\t\tscaleY: [1, 1.4, 0.95, 1],\r\n\t\t\t\topacity: [0.8, 1, 0.85, 1],\r\n\t\t\t\ttransition: {\r\n\t\t\t\t\tduration: 0.8,\r\n\t\t\t\t\tease: \"easeInOut\",\r\n\t\t\t\t\tdelay,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<motion.div\r\n\t\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\r\n\t\t\t\tonMouseEnter={handleEnter}\r\n\t\t\t\tonMouseLeave={handleLeave}\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t<motion.svg\r\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\twidth={size}\r\n\t\t\t\t\theight={size}\r\n\t\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\tstrokeWidth=\"2\"\r\n\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t\tstrokeLinejoin=\"round\"\r\n\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\tvariants={svgVariants}\r\n\t\t\t\t>\r\n\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\td=\"M2 20h.01\"\r\n\t\t\t\t\t\tvariants={dotVariants}\r\n\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\td=\"M7 20v-4\"\r\n\t\t\t\t\t\tvariants={barPulse(0.1)}\r\n\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\td=\"M12 20v-8\"\r\n\t\t\t\t\t\tvariants={barPulse(0.25)}\r\n\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\td=\"M17 20V8\"\r\n\t\t\t\t\t\tvariants={barPulse(0.4)}\r\n\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\td=\"M22 4v16\"\r\n\t\t\t\t\t\tvariants={barPulse(0.55)}\r\n\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</motion.svg>\r\n\t\t\t</motion.div>\r\n\t\t);\r\n\t},\r\n);\r\n\r\nSignalIcon.displayName = \"SignalIcon\";\r\nexport { SignalIcon };\r\n",
      "type": "registry:ui"
    }
  ]
}