{
  "name": "book-open-check",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "keywords": [
    "read",
    "pages",
    "booklet",
    "magazine",
    "leaflet",
    "pamphlet",
    "library",
    "written",
    "authored",
    "published",
    "informed",
    "knowledgeable",
    "educated",
    "schooled",
    "homework",
    "examined",
    "tested",
    "marked",
    "passed",
    "graduated",
    "studied",
    "learned",
    "lesson",
    "researched",
    "documented",
    "revealed",
    "blank",
    "plain language",
    "true",
    "truth",
    "verified",
    "corrected",
    "task",
    "todo",
    "done",
    "completed",
    "finished",
    "ticked"
  ],
  "files": [
    {
      "path": "BookOpenCheckIcon.tsx",
      "content": "\"use client\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\r\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\r\n\r\nexport interface BookOpenCheckIconHandle {\r\n\tstartAnimation: () => void;\r\n\tstopAnimation: () => void;\r\n}\r\n\r\ninterface BookOpenCheckIconProps extends HTMLMotionProps<\"div\"> {\r\n\tsize?: number;\r\n}\r\n\r\nconst BookOpenCheckIcon = forwardRef<\r\n\tBookOpenCheckIconHandle,\r\n\tBookOpenCheckIconProps\r\n>(({ onMouseEnter, onMouseLeave, className, size = 28, ...props }, ref) => {\r\n\tconst controls = useAnimation();\r\n\tconst reduced = useReducedMotion();\r\n\tconst isControlled = useRef(false);\r\n\r\n\tuseImperativeHandle(ref, () => {\r\n\t\tisControlled.current = true;\r\n\t\treturn {\r\n\t\t\tstartAnimation: () =>\r\n\t\t\t\treduced ? controls.start(\"normal\") : controls.start(\"animate\"),\r\n\t\t\tstopAnimation: () => controls.start(\"normal\"),\r\n\t\t};\r\n\t});\r\n\r\n\tconst handleEnter = useCallback(\r\n\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\r\n\t\t\tif (reduced) return;\r\n\t\t\tif (!isControlled.current) controls.start(\"animate\");\r\n\t\t\telse onMouseEnter?.(e as any);\r\n\t\t},\r\n\t\t[controls, reduced, onMouseEnter],\r\n\t);\r\n\r\n\tconst handleLeave = useCallback(\r\n\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\r\n\t\t\tif (!isControlled.current) controls.start(\"normal\");\r\n\t\t\telse onMouseLeave?.(e as any);\r\n\t\t},\r\n\t\t[controls, onMouseLeave],\r\n\t);\r\n\r\n\tconst iconVariants: Variants = {\r\n\t\tnormal: { scale: 1, rotate: 0 },\r\n\t\tanimate: {\r\n\t\t\tscale: [1, 1.06, 0.97, 1],\r\n\t\t\trotate: [0, -2, 2, 0],\r\n\t\t\ttransition: { duration: 0.9, ease: \"easeInOut\" },\r\n\t\t},\r\n\t};\r\n\r\n\tconst spineVariants: Variants = {\r\n\t\tnormal: { pathLength: 1, opacity: 1 },\r\n\t\tanimate: {\r\n\t\t\tpathLength: [0, 1],\r\n\t\t\topacity: 1,\r\n\t\t\ttransition: { duration: 0.6, ease: \"easeInOut\" },\r\n\t\t},\r\n\t};\r\n\r\n\tconst bookBodyVariants: Variants = {\r\n\t\tnormal: { scale: 1, opacity: 1 },\r\n\t\tanimate: {\r\n\t\t\tscale: [1, 1.05, 0.98, 1],\r\n\t\t\topacity: 1,\r\n\t\t\ttransition: { duration: 0.8, ease: \"easeOut\", delay: 0.15 },\r\n\t\t},\r\n\t};\r\n\r\n\tconst checkVariants: Variants = {\r\n\t\tnormal: { pathLength: 1, opacity: 1 },\r\n\t\tanimate: {\r\n\t\t\tpathLength: [0, 1],\r\n\t\t\topacity: 1,\r\n\t\t\ttransition: { duration: 0.7, ease: \"easeOut\", delay: 0.25 },\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<motion.div\r\n\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\r\n\t\t\tonMouseEnter={handleEnter}\r\n\t\t\tonMouseLeave={handleLeave}\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t<motion.svg\r\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\twidth={size}\r\n\t\t\t\theight={size}\r\n\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\tfill=\"none\"\r\n\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\tstrokeWidth=\"2\"\r\n\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\tstrokeLinejoin=\"round\"\r\n\t\t\t\tanimate={controls}\r\n\t\t\t\tinitial=\"normal\"\r\n\t\t\t\tvariants={iconVariants}\r\n\t\t\t>\r\n\t\t\t\t<motion.path\r\n\t\t\t\t\td=\"M12 21V7\"\r\n\t\t\t\t\tvariants={spineVariants}\r\n\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\tanimate={controls}\r\n\t\t\t\t/>\r\n\t\t\t\t<motion.path\r\n\t\t\t\t\td=\"m16 12 2 2 4-4\"\r\n\t\t\t\t\tvariants={checkVariants}\r\n\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\tanimate={controls}\r\n\t\t\t\t/>\r\n\t\t\t\t<motion.path\r\n\t\t\t\t\td=\"M22 6V4a1 1 0 0 0-1-1h-5a4 4 0 0 0-4 4 4 4 0 0 0-4-4H3a1 1 0 0 0-1 1v13a1 1 0 0 0 1 1h6a3 3 0 0 1 3 3 3 3 0 0 1 3-3h6a1 1 0 0 0 1-1v-1.3\"\r\n\t\t\t\t\tvariants={bookBodyVariants}\r\n\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\tanimate={controls}\r\n\t\t\t\t/>\r\n\t\t\t</motion.svg>\r\n\t\t</motion.div>\r\n\t);\r\n});\r\n\r\nBookOpenCheckIcon.displayName = \"BookOpenCheckIcon\";\r\nexport { BookOpenCheckIcon };\r\n",
      "type": "registry:ui"
    }
  ]
}