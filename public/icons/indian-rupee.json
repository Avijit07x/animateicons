{
  "name": "indian-rupee",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "keywords": [
    "currency",
    "money",
    "finance",
    "payment",
    "rupee",
    "india",
    "â‚¹"
  ],
  "files": [
    {
      "path": "IndianRupeeIcon.tsx",
      "content": "\"use client\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\r\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\r\n\r\nexport interface IndianRupeeHandle {\r\n\tstartAnimation: () => void;\r\n\tstopAnimation: () => void;\r\n}\r\n\r\ninterface IndianRupeeProps extends HTMLMotionProps<\"div\"> {\r\n\tsize?: number;\r\n}\r\n\r\nconst IndianRupeeIcon = forwardRef<IndianRupeeHandle, IndianRupeeProps>(\r\n\t({ onMouseEnter, onMouseLeave, className, size = 28, ...props }, ref) => {\r\n\t\tconst controls = useAnimation();\r\n\t\tconst reduced = useReducedMotion();\r\n\t\tconst isControlled = useRef(false);\r\n\r\n\t\tuseImperativeHandle(ref, () => {\r\n\t\t\tisControlled.current = true;\r\n\t\t\treturn {\r\n\t\t\t\tstartAnimation: () =>\r\n\t\t\t\t\treduced ? controls.start(\"normal\") : controls.start(\"animate\"),\r\n\t\t\t\tstopAnimation: () => controls.start(\"normal\"),\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tconst handleEnter = useCallback(\r\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\r\n\t\t\t\tif (reduced) return;\r\n\t\t\t\tif (!isControlled.current) controls.start(\"animate\");\r\n\t\t\t\telse onMouseEnter?.(e as any);\r\n\t\t\t},\r\n\t\t\t[controls, reduced, onMouseEnter],\r\n\t\t);\r\n\r\n\t\tconst handleLeave = useCallback(\r\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\r\n\t\t\t\tif (!isControlled.current) controls.start(\"normal\");\r\n\t\t\t\telse onMouseLeave?.(e as any);\r\n\t\t\t},\r\n\t\t\t[controls, onMouseLeave],\r\n\t\t);\r\n\r\n\t\tconst ease = [0.12, 1, 0.25, 1] as const;\r\n\r\n\t\tconst drawTop: Variants = {\r\n\t\t\tnormal: { strokeDasharray: \"1\", strokeDashoffset: 0 },\r\n\t\t\tanimate: {\r\n\t\t\t\tstrokeDasharray: \"1\",\r\n\t\t\t\tstrokeDashoffset: [1, 0],\r\n\t\t\t\ttransition: { duration: 0.5, ease, delay: 0.06 },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst drawMid: Variants = {\r\n\t\t\tnormal: { strokeDasharray: \"1\", strokeDashoffset: 0 },\r\n\t\t\tanimate: {\r\n\t\t\t\tstrokeDasharray: \"1\",\r\n\t\t\t\tstrokeDashoffset: [1, 0],\r\n\t\t\t\ttransition: { duration: 0.5, ease: \"easeInOut\", delay: 0.16 },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst drawCurve: Variants = {\r\n\t\t\tnormal: { strokeDasharray: \"1\", strokeDashoffset: 0 },\r\n\t\t\tanimate: {\r\n\t\t\t\tstrokeDasharray: \"1\",\r\n\t\t\t\tstrokeDashoffset: [1, 0],\r\n\t\t\t\ttransition: { duration: 0.8, ease: \"easeInOut\", delay: 0.26 },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst drawNotch: Variants = {\r\n\t\t\tnormal: { strokeDasharray: \"1\", strokeDashoffset: 0 },\r\n\t\t\tanimate: {\r\n\t\t\t\tstrokeDasharray: \"1\",\r\n\t\t\t\tstrokeDashoffset: [1, 0],\r\n\t\t\t\ttransition: { duration: 0.45, ease: \"easeInOut\", delay: 0.42 },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst groupSettle: Variants = {\r\n\t\t\tnormal: { scale: 1, x: 0, y: 0 },\r\n\t\t\tanimate: {\r\n\t\t\t\tscale: [1, 1.05, 1],\r\n\t\t\t\tx: [0, -1, 0],\r\n\t\t\t\ty: [0, -1, 0],\r\n\t\t\t\ttransition: { duration: 0.6, ease },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst diagonalResolve: Variants = {\r\n\t\t\tnormal: {\r\n\t\t\t\tstrokeDasharray: \"1\",\r\n\t\t\t\tstrokeDashoffset: 0,\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0,\r\n\t\t\t\topacity: 1,\r\n\t\t\t\tscale: 1,\r\n\t\t\t},\r\n\t\t\tanimate: {\r\n\t\t\t\tstrokeDasharray: \"1\",\r\n\t\t\t\tstrokeDashoffset: [1, 0],\r\n\t\t\t\tx: [-0.3, 0.5, 0],\r\n\t\t\t\ty: [-0.2, 0.5, 0],\r\n\t\t\t\tscale: [1, 1.05, 1],\r\n\t\t\t\topacity: [1, 1],\r\n\t\t\t\ttransition: { duration: 0.6, ease, delay: 0.5 },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<motion.div\r\n\t\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\r\n\t\t\t\tonMouseEnter={handleEnter}\r\n\t\t\t\tonMouseLeave={handleLeave}\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t<motion.svg\r\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\twidth={size}\r\n\t\t\t\t\theight={size}\r\n\t\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\tstrokeWidth=\"2\"\r\n\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t\tstrokeLinejoin=\"round\"\r\n\t\t\t\t\tclassName=\"lucide lucide-indian-rupee-icon lucide-indian-rupee\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<motion.g variants={groupSettle} initial=\"normal\" animate={controls}>\r\n\t\t\t\t\t\t<g opacity={0.3}>\r\n\t\t\t\t\t\t\t<path d=\"M6 3h12\" />\r\n\t\t\t\t\t\t\t<path d=\"M6 8h12\" />\r\n\t\t\t\t\t\t\t<path d=\"M9 13c6.667 0 6.667-10 0-10\" />\r\n\t\t\t\t\t\t\t<path d=\"M6 13h3\" />\r\n\t\t\t\t\t\t\t<path d=\"m6 13 8.5 8\" />\r\n\t\t\t\t\t\t</g>\r\n\r\n\t\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\t\td=\"M6 3h12\"\r\n\t\t\t\t\t\t\tpathLength={1}\r\n\t\t\t\t\t\t\tvariants={drawTop}\r\n\t\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\t\td=\"M6 8h12\"\r\n\t\t\t\t\t\t\tpathLength={1}\r\n\t\t\t\t\t\t\tvariants={drawMid}\r\n\t\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\t\td=\"M9 13c6.667 0 6.667-10 0-10\"\r\n\t\t\t\t\t\t\tpathLength={1}\r\n\t\t\t\t\t\t\tvariants={drawCurve}\r\n\t\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\t\td=\"M6 13h3\"\r\n\t\t\t\t\t\t\tpathLength={1}\r\n\t\t\t\t\t\t\tvariants={drawNotch}\r\n\t\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\t\td=\"m6 13 8.5 8\"\r\n\t\t\t\t\t\t\tpathLength={1}\r\n\t\t\t\t\t\t\tvariants={diagonalResolve}\r\n\t\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</motion.g>\r\n\t\t\t\t</motion.svg>\r\n\t\t\t</motion.div>\r\n\t\t);\r\n\t},\r\n);\r\n\r\nIndianRupeeIcon.displayName = \"IndianRupeeIcon\";\r\nexport { IndianRupeeIcon };\r\n",
      "type": "registry:ui"
    }
  ]
}