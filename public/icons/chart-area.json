{
  "name": "chart-area",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "keywords": [
    "bar",
    "graph",
    "analytics",
    "data",
    "statistics",
    "chart",
    "visualization",
    "metrics",
    "report",
    "dashboard",
    "bars",
    "histogram"
  ],
  "files": [
    {
      "path": "ChartAreaIcon.tsx",
      "content": "\"use client\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\r\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\r\n\r\nexport interface ChartAreaIconHandle {\r\n\tstartAnimation: () => void;\r\n\tstopAnimation: () => void;\r\n}\r\n\r\ninterface ChartAreaIconProps extends HTMLMotionProps<\"div\"> {\r\n\tsize?: number;\r\n}\r\n\r\nconst ChartAreaIcon = forwardRef<ChartAreaIconHandle, ChartAreaIconProps>(\r\n\t({ onMouseEnter, onMouseLeave, className, size = 28, ...props }, ref) => {\r\n\t\tconst controls = useAnimation();\r\n\t\tconst reduced = useReducedMotion();\r\n\t\tconst isControlled = useRef(false);\r\n\r\n\t\tuseImperativeHandle(ref, () => {\r\n\t\t\tisControlled.current = true;\r\n\t\t\treturn {\r\n\t\t\t\tstartAnimation: () =>\r\n\t\t\t\t\treduced ? controls.start(\"normal\") : controls.start(\"animate\"),\r\n\t\t\t\tstopAnimation: () => controls.start(\"normal\"),\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tconst handleEnter = useCallback(\r\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\r\n\t\t\t\tif (reduced) return;\r\n\t\t\t\tif (!isControlled.current) controls.start(\"animate\");\r\n\t\t\t\telse onMouseEnter?.(e as any);\r\n\t\t\t},\r\n\t\t\t[controls, reduced, onMouseEnter],\r\n\t\t);\r\n\r\n\t\tconst handleLeave = useCallback(\r\n\t\t\t(e: React.MouseEvent<HTMLDivElement>) => {\r\n\t\t\t\tif (!isControlled.current) {\r\n\t\t\t\t\tcontrols.start(\"normal\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tonMouseLeave?.(e as any);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t[controls, onMouseLeave],\r\n\t\t);\r\n\r\n\t\tconst pathVariants: Variants = {\r\n\t\t\tnormal: {\r\n\t\t\t\tpathLength: 1,\r\n\t\t\t\topacity: 1,\r\n\t\t\t\ttransition: { duration: 0.2 },\r\n\t\t\t},\r\n\t\t\tanimate: {\r\n\t\t\t\tpathLength: [0, 1],\r\n\t\t\t\topacity: [0.7, 1],\r\n\t\t\t\ttransition: {\r\n\t\t\t\t\tduration: 0.6,\r\n\t\t\t\t\tease: \"easeInOut\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst chartVariants: Variants = {\r\n\t\t\tnormal: {\r\n\t\t\t\tscale: 1,\r\n\t\t\t\ttransition: { duration: 0.2 },\r\n\t\t\t},\r\n\t\t\tanimate: {\r\n\t\t\t\tscale: [1, 1.05, 1],\r\n\t\t\t\ttransition: {\r\n\t\t\t\t\tduration: 0.4,\r\n\t\t\t\t\tease: \"easeInOut\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<motion.div\r\n\t\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\r\n\t\t\t\tonMouseEnter={handleEnter}\r\n\t\t\t\tonMouseLeave={handleLeave}\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t<motion.svg\r\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\twidth={size}\r\n\t\t\t\t\theight={size}\r\n\t\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\tstrokeWidth=\"2\"\r\n\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t\tstrokeLinejoin=\"round\"\r\n\t\t\t\t\tvariants={chartVariants}\r\n\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<motion.path d=\"M3 3v16a2 2 0 0 0 2 2h16\" variants={pathVariants} />\r\n\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\td=\"M7 11.207a.5.5 0 0 1 .146-.353l2-2a.5.5 0 0 1 .708 0l3.292 3.292a.5.5 0 0 0 .708 0l4.292-4.292a.5.5 0 0 1 .854.353V16a1 1 0 0 1-1 1H8a1 1 0 0 1-1-1z\"\r\n\t\t\t\t\t\tvariants={pathVariants}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</motion.svg>\r\n\t\t\t</motion.div>\r\n\t\t);\r\n\t},\r\n);\r\n\r\nChartAreaIcon.displayName = \"ChartAreaIcon\";\r\nexport { ChartAreaIcon };\r\n",
      "type": "registry:ui"
    }
  ]
}