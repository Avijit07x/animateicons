{
  "name": "send",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "keywords": [
    "message",
    "chat",
    "mail",
    "submit",
    "forward",
    "share",
    "paper-plane"
  ],
  "files": [
    {
      "path": "SendIcon.tsx",
      "content": "\"use client\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\r\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\r\n\r\nexport interface SendIconHandle {\r\n\tstartAnimation: () => void;\r\n\tstopAnimation: () => void;\r\n}\r\n\r\ninterface SendIconProps extends HTMLMotionProps<\"div\"> {\r\n\tsize?: number;\r\n}\r\n\r\nconst SendIcon = forwardRef<SendIconHandle, SendIconProps>(\r\n\t({ onMouseEnter, onMouseLeave, className, size = 28, ...props }, ref) => {\r\n\t\tconst controls = useAnimation();\r\n\t\tconst reduced = useReducedMotion();\r\n\t\tconst isControlled = useRef(false);\r\n\r\n\t\tuseImperativeHandle(ref, () => {\r\n\t\t\tisControlled.current = true;\r\n\t\t\treturn {\r\n\t\t\t\tstartAnimation: () =>\r\n\t\t\t\t\treduced ? controls.start(\"normal\") : controls.start(\"animate\"),\r\n\t\t\t\tstopAnimation: () => controls.start(\"normal\"),\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tconst handleEnter = useCallback(\r\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\r\n\t\t\t\tif (reduced) return;\r\n\t\t\t\tif (!isControlled.current) controls.start(\"animate\");\r\n\t\t\t\telse onMouseEnter?.(e as any);\r\n\t\t\t},\r\n\t\t\t[controls, reduced, onMouseEnter],\r\n\t\t);\r\n\r\n\t\tconst handleLeave = useCallback(\r\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\r\n\t\t\t\tif (!isControlled.current) controls.start(\"normal\");\r\n\t\t\t\telse onMouseLeave?.(e as any);\r\n\t\t\t},\r\n\t\t\t[controls, onMouseLeave],\r\n\t\t);\r\n\r\n\t\tconst svgVariants: Variants = {\r\n\t\t\tnormal: { rotate: 0, x: 0, y: 0, scale: 1 },\r\n\t\t\tanimate: {\r\n\t\t\t\trotate: [0, -5, 2, 0],\r\n\t\t\t\tx: [0, 4, -1, 0],\r\n\t\t\t\ty: [0, -2, 0, 0],\r\n\t\t\t\tscale: [1, 1.04, 1, 1],\r\n\t\t\t\ttransition: {\r\n\t\t\t\t\tduration: 1.2,\r\n\t\t\t\t\tease: \"easeInOut\",\r\n\t\t\t\t\twhen: \"beforeChildren\",\r\n\t\t\t\t\tstaggerChildren: 0.08,\r\n\t\t\t\t\trepeat: 0,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst pathDrawVariants: Variants = {\r\n\t\t\tnormal: { pathLength: 1, opacity: 1 },\r\n\t\t\tanimate: {\r\n\t\t\t\tpathLength: [0, 1],\r\n\t\t\t\topacity: [0.6, 1],\r\n\t\t\t\ttransition: { duration: 0.7, ease: \"easeInOut\", repeat: 0 },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst trailVariants: Variants = {\r\n\t\t\tnormal: { opacity: 0, x: 0, scaleX: 1, originX: 1 },\r\n\t\t\tanimate: {\r\n\t\t\t\topacity: [0, 0.5, 0],\r\n\t\t\t\tx: [-4, -6, -8],\r\n\t\t\t\tscaleX: [0.8, 1, 1.1],\r\n\t\t\t\ttransition: { duration: 0.5, ease: \"easeOut\", repeat: 0, delay: 0.05 },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<motion.div\r\n\t\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\r\n\t\t\t\tonMouseEnter={handleEnter}\r\n\t\t\t\tonMouseLeave={handleLeave}\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t<motion.svg\r\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\twidth={size}\r\n\t\t\t\t\theight={size}\r\n\t\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\tstrokeWidth=\"2\"\r\n\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t\tstrokeLinejoin=\"round\"\r\n\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\tvariants={svgVariants}\r\n\t\t\t\t>\r\n\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\td=\"M14.536 21.686a.5.5 0 0 0 .937-.024l6.5-19a.496.496 0 0 0-.635-.635l-19 6.5a.5.5 0 0 0-.024.937l7.93 3.18a2 2 0 0 1 1.112 1.11z\"\r\n\t\t\t\t\t\tvariants={pathDrawVariants}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\td=\"m21.854 2.147-10.94 10.939\"\r\n\t\t\t\t\t\tvariants={pathDrawVariants}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<motion.line\r\n\t\t\t\t\t\tx1=\"6\"\r\n\t\t\t\t\t\ty1=\"12\"\r\n\t\t\t\t\t\tx2=\"11\"\r\n\t\t\t\t\t\ty2=\"12\"\r\n\t\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\t\tstrokeWidth=\"2\"\r\n\t\t\t\t\t\tvariants={trailVariants}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</motion.svg>\r\n\t\t\t</motion.div>\r\n\t\t);\r\n\t},\r\n);\r\n\r\nSendIcon.displayName = \"SendIcon\";\r\nexport { SendIcon };\r\n",
      "type": "registry:ui"
    }
  ]
}