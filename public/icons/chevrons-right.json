{
  "name": "chevrons-right",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "keywords": [
    "turn",
    "corner",
    "forward",
    "double",
    "fast-forward",
    "jump"
  ],
  "files": [
    {
      "path": "ChevronsRightIcon.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\n\nexport interface ChevronsRightIconHandle {\n\tstartAnimation: () => void;\n\tstopAnimation: () => void;\n}\n\ninterface ChevronsRightIconProps extends HTMLMotionProps<\"div\"> {\n\tsize?: number;\n}\n\nconst ChevronsRightIcon = forwardRef<\n\tChevronsRightIconHandle,\n\tChevronsRightIconProps\n>(({ onMouseEnter, onMouseLeave, className, size = 28, ...props }, ref) => {\n\tconst controls = useAnimation();\n\tconst reduced = useReducedMotion();\n\tconst isControlled = useRef(false);\n\n\tuseImperativeHandle(ref, () => {\n\t\tisControlled.current = true;\n\t\treturn {\n\t\t\tstartAnimation: () =>\n\t\t\t\treduced ? controls.start(\"normal\") : controls.start(\"animate\"),\n\t\t\tstopAnimation: () => controls.start(\"normal\"),\n\t\t};\n\t});\n\n\tconst handleEnter = useCallback(\n\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\n\t\t\tif (reduced) return;\n\t\t\tif (!isControlled.current) controls.start(\"animate\");\n\t\t\telse onMouseEnter?.(e as any);\n\t\t},\n\t\t[controls, reduced, onMouseEnter],\n\t);\n\n\tconst handleLeave = useCallback(\n\t\t(e: React.MouseEvent<HTMLDivElement>) => {\n\t\t\tif (!isControlled.current) {\n\t\t\t\tcontrols.start(\"normal\");\n\t\t\t} else {\n\t\t\t\tonMouseLeave?.(e);\n\t\t\t}\n\t\t},\n\t\t[controls, onMouseLeave],\n\t);\n\n\tconst leadingArrow: Variants = {\n\t\tnormal: { x: 0, opacity: 1 },\n\t\tanimate: {\n\t\t\tx: [0, 4, 0],\n\t\t\topacity: [1, 0.6, 1],\n\t\t\ttransition: {\n\t\t\t\tduration: 0.8,\n\t\t\t\trepeat: 0,\n\t\t\t},\n\t\t},\n\t};\n\n\tconst trailingArrow: Variants = {\n\t\tnormal: { x: 0, opacity: 0.5 },\n\t\tanimate: {\n\t\t\tx: [0, 6, 0],\n\t\t\topacity: [0.5, 0.2, 0.5],\n\t\t\ttransition: {\n\t\t\t\tduration: 0.8,\n\t\t\t\trepeat: 0,\n\t\t\t\tdelay: 0.2,\n\t\t\t},\n\t\t},\n\t};\n\n\treturn (\n\t\t<motion.div\n\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\n\t\t\tonMouseEnter={handleEnter}\n\t\t\tonMouseLeave={handleLeave}\n\t\t\t{...props}\n\t\t>\n\t\t\t<motion.svg\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\twidth={size}\n\t\t\t\theight={size}\n\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\tfill=\"none\"\n\t\t\t\tstroke=\"currentColor\"\n\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\tanimate={controls}\n\t\t\t\tinitial=\"normal\"\n\t\t\t>\n\t\t\t\t<motion.path\n\t\t\t\t\td=\"m6 17 5-5-5-5\"\n\t\t\t\t\tvariants={trailingArrow}\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t/>\n\t\t\t\t<motion.path\n\t\t\t\t\td=\"m13 17 5-5-5-5\"\n\t\t\t\t\tvariants={leadingArrow}\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t/>\n\t\t\t</motion.svg>\n\t\t</motion.div>\n\t);\n});\n\nChevronsRightIcon.displayName = \"ChevronsRightIcon\";\nexport { ChevronsRightIcon };\n",
      "type": "registry:ui"
    }
  ]
}