{
  "name": "chart-no-axes-combined",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "keywords": [
    "statistics",
    "analytics",
    "diagram",
    "graph",
    "trending up"
  ],
  "files": [
    {
      "path": "ChartNoAxesCombinedIcon.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\n\nexport interface ChartNoAxesCombinedIconHandle {\n\tstartAnimation: () => void;\n\tstopAnimation: () => void;\n}\n\ninterface ChartNoAxesCombinedIconProps extends HTMLMotionProps<\"div\"> {\n\tsize?: number;\n}\n\nconst ChartNoAxesCombinedIcon = forwardRef<\n\tChartNoAxesCombinedIconHandle,\n\tChartNoAxesCombinedIconProps\n>(({ onMouseEnter, onMouseLeave, className, size = 28, ...props }, ref) => {\n\tconst groupControls = useAnimation();\n\tconst barsControls = useAnimation();\n\tconst lineControls = useAnimation();\n\tconst reduced = useReducedMotion();\n\tconst isControlled = useRef(false);\n\n\tuseImperativeHandle(ref, () => {\n\t\tisControlled.current = true;\n\t\treturn {\n\t\t\tstartAnimation: () => {\n\t\t\t\tif (reduced) {\n\t\t\t\t\tgroupControls.start(\"normal\");\n\t\t\t\t\tbarsControls.start(\"normal\");\n\t\t\t\t\tlineControls.start(\"normal\");\n\t\t\t\t} else {\n\t\t\t\t\tgroupControls.start(\"animate\");\n\t\t\t\t\tbarsControls.start(\"animate\");\n\t\t\t\t\tlineControls.start(\"animate\");\n\t\t\t\t}\n\t\t\t},\n\t\t\tstopAnimation: () => {\n\t\t\t\tgroupControls.start(\"normal\");\n\t\t\t\tbarsControls.start(\"normal\");\n\t\t\t\tlineControls.start(\"normal\");\n\t\t\t},\n\t\t};\n\t});\n\n\tconst handleEnter = useCallback(\n\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\n\t\t\tif (reduced) return;\n\t\t\tif (!isControlled.current) {\n\t\t\t\tgroupControls.start(\"animate\");\n\t\t\t\tbarsControls.start(\"animate\");\n\t\t\t\tlineControls.start(\"animate\");\n\t\t\t} else onMouseEnter?.(e as any);\n\t\t},\n\t\t[groupControls, barsControls, lineControls, reduced, onMouseEnter],\n\t);\n\n\tconst handleLeave = useCallback(\n\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\n\t\t\tif (!isControlled.current) {\n\t\t\t\tgroupControls.start(\"normal\");\n\t\t\t\tbarsControls.start(\"normal\");\n\t\t\t\tlineControls.start(\"normal\");\n\t\t\t} else onMouseLeave?.(e as any);\n\t\t},\n\t\t[groupControls, barsControls, lineControls, onMouseLeave],\n\t);\n\n\tconst ease = [0.25, 0.1, 0.25, 1] as const;\n\n\tconst groupVariants: Variants = {\n\t\tnormal: { scale: 1, rotate: 0, y: 0 },\n\t\tanimate: {\n\t\t\tscale: [1, 1.04, 0.99, 1],\n\t\t\trotate: [0, -1.5, 1, 0],\n\t\t\ttransition: { duration: 0.8, ease },\n\t\t},\n\t};\n\n\tconst barVariant = (delay = 0): Variants => ({\n\t\tnormal: { scaleY: 1, opacity: 1, transformOrigin: \"center bottom\" },\n\t\tanimate: {\n\t\t\tscaleY: [1, 1.4, 0.95, 1],\n\t\t\topacity: [1, 1, 0.95, 1],\n\t\t\ttransition: { duration: 0.7, ease, delay },\n\t\t},\n\t});\n\n\tconst lineVariants: Variants = {\n\t\tnormal: { pathLength: 1, opacity: 1 },\n\t\tanimate: {\n\t\t\tpathLength: [0, 1],\n\t\t\topacity: [0.6, 1],\n\t\t\ttransition: { duration: 1.0, ease: \"easeInOut\", delay: 0.12 },\n\t\t},\n\t};\n\n\treturn (\n\t\t<motion.div\n\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\n\t\t\tonMouseEnter={handleEnter}\n\t\t\tonMouseLeave={handleLeave}\n\t\t\t{...props}\n\t\t>\n\t\t\t<motion.svg\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\twidth={size}\n\t\t\t\theight={size}\n\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\tfill=\"none\"\n\t\t\t\tstroke=\"currentColor\"\n\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\tinitial=\"normal\"\n\t\t\t\tanimate={groupControls}\n\t\t\t\tvariants={groupVariants}\n\t\t\t>\n\t\t\t\t<motion.path\n\t\t\t\t\td=\"M12 16v5\"\n\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\tanimate={barsControls}\n\t\t\t\t\tvariants={barVariant(0)}\n\t\t\t\t/>\n\t\t\t\t<motion.path\n\t\t\t\t\td=\"M16 14v7\"\n\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\tanimate={barsControls}\n\t\t\t\t\tvariants={barVariant(0.06)}\n\t\t\t\t/>\n\t\t\t\t<motion.path\n\t\t\t\t\td=\"M20 10v11\"\n\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\tanimate={barsControls}\n\t\t\t\t\tvariants={barVariant(0.12)}\n\t\t\t\t/>\n\t\t\t\t<motion.path\n\t\t\t\t\td=\"m22 3-8.646 8.646a.5.5 0 0 1-.708 0L9.354 8.354a.5.5 0 0 0-.707 0L2 15\"\n\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\tanimate={lineControls}\n\t\t\t\t\tvariants={lineVariants}\n\t\t\t\t/>\n\t\t\t\t<motion.path\n\t\t\t\t\td=\"M4 18v3\"\n\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\tanimate={barsControls}\n\t\t\t\t\tvariants={barVariant(0.18)}\n\t\t\t\t/>\n\t\t\t\t<motion.path\n\t\t\t\t\td=\"M8 14v7\"\n\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\tanimate={barsControls}\n\t\t\t\t\tvariants={barVariant(0.24)}\n\t\t\t\t/>\n\t\t\t</motion.svg>\n\t\t</motion.div>\n\t);\n});\n\nChartNoAxesCombinedIcon.displayName = \"ChartNoAxesCombinedIcon\";\nexport { ChartNoAxesCombinedIcon };\n",
      "type": "registry:ui"
    }
  ]
}