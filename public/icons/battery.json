{
  "name": "battery",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "keywords": [
    "power",
    "charge",
    "energy",
    "status",
    "level"
  ],
  "files": [
    {
      "path": "BatteryIcon.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\nimport { motion, useAnimation } from \"motion/react\";\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\n\nexport interface BatteryIconHandle {\n\tstartAnimation: () => void;\n\tstopAnimation: () => void;\n}\n\ninterface BatteryIconProps extends HTMLMotionProps<\"div\"> {\n\tsize?: number;\n}\n\nconst BatteryIcon = forwardRef<BatteryIconHandle, BatteryIconProps>(\n\t({ onMouseEnter, onMouseLeave, className, size = 32, ...props }, ref) => {\n\t\tconst controls = useAnimation();\n\t\tconst isControlled = useRef(false);\n\n\t\tuseImperativeHandle(ref, () => {\n\t\t\tisControlled.current = true;\n\t\t\treturn {\n\t\t\t\tstartAnimation: () => controls.start(\"warning\"),\n\t\t\t\tstopAnimation: () => controls.start(\"normal\"),\n\t\t\t};\n\t\t});\n\n\t\tconst handleEnter = useCallback(() => {\n\t\t\tif (!isControlled.current) controls.start(\"warning\");\n\t\t}, [controls]);\n\n\t\tconst handleLeave = useCallback(() => {\n\t\t\tif (!isControlled.current) controls.start(\"normal\");\n\t\t}, [controls]);\n\n\t\tconst svgVariants: Variants = {\n\t\t\tnormal: { rotate: 0 },\n\t\t\twarning: {\n\t\t\t\trotate: [0, -3, 3, -2, 0],\n\t\t\t\ttransition: {\n\t\t\t\t\tduration: 0.5,\n\t\t\t\t\tease: [0.42, 0, 0.58, 1],\n\t\t\t\t\trepeat: 0,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\tconst rectVariants: Variants = {\n\t\t\tnormal: { stroke: \"currentColor\", opacity: 1 },\n\t\t\twarning: {\n\t\t\t\tstroke: [\"#ef4444\", \"#dc2626\", \"#ef4444\"],\n\t\t\t\topacity: [0.6, 1, 0.6],\n\t\t\t\ttransition: {\n\t\t\t\t\tduration: 0.9,\n\t\t\t\t\tease: [0.42, 0, 0.58, 1],\n\t\t\t\t\trepeat: 0,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\tconst tipVariants: Variants = {\n\t\t\tnormal: { stroke: \"currentColor\", opacity: 1 },\n\t\t\twarning: {\n\t\t\t\tstroke: [\"#ef4444\", \"#dc2626\", \"#ef4444\"],\n\t\t\t\topacity: [0.4, 1, 0.4],\n\t\t\t\ttransition: {\n\t\t\t\t\tduration: 0.7,\n\t\t\t\t\tease: [0.42, 0, 0.58, 1],\n\t\t\t\t\trepeat: 0,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\treturn (\n\t\t\t<motion.div\n\t\t\t\tclassName={cn(\"inline-flex\", className)}\n\t\t\t\tonMouseEnter={handleEnter}\n\t\t\t\tonMouseLeave={handleLeave}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t<motion.svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\twidth={size}\n\t\t\t\t\theight={size}\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t\tanimate={controls}\n\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\tvariants={svgVariants}\n\t\t\t\t>\n\t\t\t\t\t<motion.path\n\t\t\t\t\t\td=\"M22 14L22 10\"\n\t\t\t\t\t\tvariants={tipVariants}\n\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t/>\n\t\t\t\t\t<motion.rect\n\t\t\t\t\t\tx=\"2\"\n\t\t\t\t\t\ty=\"6\"\n\t\t\t\t\t\twidth=\"16\"\n\t\t\t\t\t\theight=\"12\"\n\t\t\t\t\t\trx=\"2\"\n\t\t\t\t\t\tvariants={rectVariants}\n\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t/>\n\t\t\t\t</motion.svg>\n\t\t\t</motion.div>\n\t\t);\n\t},\n);\n\nBatteryIcon.displayName = \"BatteryIcon\";\nexport { BatteryIcon };\n",
      "type": "registry:ui"
    }
  ]
}