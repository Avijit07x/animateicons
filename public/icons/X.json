{
  "name": "X",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "keywords": [
    "cancel",
    "close",
    "delete",
    "remove",
    "clear",
    "multiply"
  ],
  "files": [
    {
      "path": "XIcon.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport type { HTMLMotionProps } from \"motion/react\";\nimport { motion, useAnimation } from \"motion/react\";\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\n\nexport interface XIconHandle {\n\tstartAnimation: () => void;\n\tstopAnimation: () => void;\n}\n\ninterface XIconProps extends HTMLMotionProps<\"div\"> {\n\tsize?: number;\n}\n\nconst XIcon = forwardRef<XIconHandle, XIconProps>(\n\t({ onMouseEnter, onMouseLeave, className, size = 24, ...props }, ref) => {\n\t\tconst controls = useAnimation();\n\t\tconst isControlledRef = useRef(false);\n\n\t\tuseImperativeHandle(ref, () => {\n\t\t\tisControlledRef.current = true;\n\t\t\treturn {\n\t\t\t\tstartAnimation: () => controls.start(\"animate\"),\n\t\t\t\tstopAnimation: () => controls.start(\"normal\"),\n\t\t\t};\n\t\t});\n\n\t\tconst handleMouseEnter = useCallback(\n\t\t\t(e: React.MouseEvent<HTMLDivElement>) => {\n\t\t\t\tif (!isControlledRef.current) {\n\t\t\t\t\tcontrols.start(\"animate\");\n\t\t\t\t} else {\n\t\t\t\t\tonMouseEnter?.(e);\n\t\t\t\t}\n\t\t\t},\n\t\t\t[controls, onMouseEnter],\n\t\t);\n\n\t\tconst handleMouseLeave = useCallback(\n\t\t\t(e: React.MouseEvent<HTMLDivElement>) => {\n\t\t\t\tif (!isControlledRef.current) {\n\t\t\t\t\tcontrols.start(\"normal\");\n\t\t\t\t} else {\n\t\t\t\t\tonMouseLeave?.(e);\n\t\t\t\t}\n\t\t\t},\n\t\t\t[controls, onMouseLeave],\n\t\t);\n\n\t\treturn (\n\t\t\t<motion.div\n\t\t\t\tclassName={cn(className)}\n\t\t\t\tonMouseEnter={handleMouseEnter}\n\t\t\t\tonMouseLeave={handleMouseLeave}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t<motion.svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\twidth={size}\n\t\t\t\t\theight={size}\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t\tvariants={{\n\t\t\t\t\t\tnormal: { rotate: 0, scale: 1, transition: { duration: 0.3 } },\n\t\t\t\t\t\tanimate: {\n\t\t\t\t\t\t\trotate: [0, 15, -15, 0],\n\t\t\t\t\t\t\tscale: [1, 1.1, 1],\n\t\t\t\t\t\t\ttransition: { duration: 0.6 },\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\tanimate={controls}\n\t\t\t\t>\n\t\t\t\t\t<motion.path\n\t\t\t\t\t\td=\"M18 6 6 18\"\n\t\t\t\t\t\tinitial={{ pathLength: 0, opacity: 0 }}\n\t\t\t\t\t\tanimate={{ pathLength: 1, opacity: 1 }}\n\t\t\t\t\t\ttransition={{ duration: 0.6, ease: \"easeInOut\" }}\n\t\t\t\t\t\tvariants={{\n\t\t\t\t\t\t\tnormal: { pathLength: 1, opacity: 1 },\n\t\t\t\t\t\t\tanimate: {\n\t\t\t\t\t\t\t\tpathLength: [0, 1],\n\t\t\t\t\t\t\t\topacity: [0, 1],\n\t\t\t\t\t\t\t\ttransition: { duration: 0.6, ease: \"easeInOut\" },\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<motion.path\n\t\t\t\t\t\td=\"m6 6 12 12\"\n\t\t\t\t\t\tinitial={{ pathLength: 0, opacity: 0 }}\n\t\t\t\t\t\tanimate={{ pathLength: 1, opacity: 1 }}\n\t\t\t\t\t\ttransition={{ duration: 0.6, ease: \"easeInOut\", delay: 0.2 }}\n\t\t\t\t\t\tvariants={{\n\t\t\t\t\t\t\tnormal: { pathLength: 1, opacity: 1 },\n\t\t\t\t\t\t\tanimate: {\n\t\t\t\t\t\t\t\tpathLength: [0, 1],\n\t\t\t\t\t\t\t\topacity: [0, 1],\n\t\t\t\t\t\t\t\ttransition: { duration: 0.6, ease: \"easeInOut\", delay: 0.2 },\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</motion.svg>\n\t\t\t</motion.div>\n\t\t);\n\t},\n);\n\nXIcon.displayName = \"XIcon\";\n\nexport { XIcon };\n",
      "type": "registry:ui"
    }
  ]
}