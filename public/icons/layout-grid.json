{
  "name": "layout-grid",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "keywords": [
    "masonry",
    "brick",
    "panel",
    "grid",
    "widgets",
    "layout"
  ],
  "files": [
    {
      "path": "LayoutGridIcon.tsx",
      "content": "\"use client\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\r\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\r\n\r\nexport interface LayoutGridHandle {\r\n\tstartAnimation: () => void;\r\n\tstopAnimation: () => void;\r\n}\r\n\r\ninterface LayoutGridProps extends HTMLMotionProps<\"div\"> {\r\n\tsize?: number;\r\n}\r\n\r\nconst LayoutGridIcon = forwardRef<LayoutGridHandle, LayoutGridProps>(\r\n\t({ onMouseEnter, onMouseLeave, className, size = 28, ...props }, ref) => {\r\n\t\tconst controls = useAnimation();\r\n\t\tconst reduced = useReducedMotion();\r\n\t\tconst isControlled = useRef(false);\r\n\r\n\t\tuseImperativeHandle(ref, () => {\r\n\t\t\tisControlled.current = true;\r\n\t\t\treturn {\r\n\t\t\t\tstartAnimation: () =>\r\n\t\t\t\t\treduced ? controls.start(\"normal\") : controls.start(\"animate\"),\r\n\t\t\t\tstopAnimation: () => controls.start(\"normal\"),\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tconst handleEnter = useCallback(() => {\r\n\t\t\tif (reduced) return;\r\n\t\t\tif (!isControlled.current) controls.start(\"animate\");\r\n\t\t}, [controls, reduced]);\r\n\r\n\t\tconst handleLeave = useCallback(() => {\r\n\t\t\tif (!isControlled.current) controls.start(\"normal\");\r\n\t\t}, [controls]);\r\n\r\n\t\tconst gridVariants: Variants = {\r\n\t\t\tnormal: { scale: 1, rotate: 0 },\r\n\t\t\tanimate: {\r\n\t\t\t\tscale: [1, 1.03, 1],\r\n\t\t\t\trotate: [0, 1, 0],\r\n\t\t\t\ttransition: { duration: 0.6, ease: \"easeInOut\" as const },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst tileVariants: Variants = {\r\n\t\t\tnormal: { opacity: 1, scale: 1 },\r\n\t\t\tanimate: (i: number) => ({\r\n\t\t\t\topacity: [0.4, 1],\r\n\t\t\t\tscale: [0.85, 1.08, 1],\r\n\t\t\t\ttransition: {\r\n\t\t\t\t\tduration: 0.55,\r\n\t\t\t\t\tdelay: 0.08 * i,\r\n\t\t\t\t\tease: \"easeOut\" as const,\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t};\r\n\r\n\t\tconst sweepVariants: Variants = {\r\n\t\t\tnormal: { x: -26, y: -26, opacity: 0 },\r\n\t\t\tanimate: {\r\n\t\t\t\tx: [-26, 26],\r\n\t\t\t\ty: [-26, 26],\r\n\t\t\t\topacity: [0, 0.35, 0],\r\n\t\t\t\ttransition: {\r\n\t\t\t\t\tduration: 0.8,\r\n\t\t\t\t\tease: \"easeInOut\" as const,\r\n\t\t\t\t\tdelay: 0.1,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<motion.div\r\n\t\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\r\n\t\t\t\tonMouseEnter={handleEnter}\r\n\t\t\t\tonMouseLeave={handleLeave}\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t<motion.svg\r\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\twidth={size}\r\n\t\t\t\t\theight={size}\r\n\t\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\tstrokeWidth=\"2\"\r\n\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t\tstrokeLinejoin=\"round\"\r\n\t\t\t\t\tclassName=\"lucide lucide-layout-grid-icon lucide-layout-grid\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<defs>\r\n\t\t\t\t\t\t<linearGradient id=\"grid-sweep\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"1\">\r\n\t\t\t\t\t\t\t<stop offset=\"0%\" stopColor=\"currentColor\" stopOpacity=\"0\" />\r\n\t\t\t\t\t\t\t<stop offset=\"50%\" stopColor=\"currentColor\" stopOpacity=\"0.35\" />\r\n\t\t\t\t\t\t\t<stop offset=\"100%\" stopColor=\"currentColor\" stopOpacity=\"0\" />\r\n\t\t\t\t\t\t</linearGradient>\r\n\t\t\t\t\t</defs>\r\n\r\n\t\t\t\t\t<motion.g variants={gridVariants} initial=\"normal\" animate={controls}>\r\n\t\t\t\t\t\t<motion.rect\r\n\t\t\t\t\t\t\twidth=\"7\"\r\n\t\t\t\t\t\t\theight=\"7\"\r\n\t\t\t\t\t\t\tx=\"3\"\r\n\t\t\t\t\t\t\ty=\"3\"\r\n\t\t\t\t\t\t\trx=\"1\"\r\n\t\t\t\t\t\t\tvariants={tileVariants}\r\n\t\t\t\t\t\t\tcustom={0}\r\n\t\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<motion.rect\r\n\t\t\t\t\t\t\twidth=\"7\"\r\n\t\t\t\t\t\t\theight=\"7\"\r\n\t\t\t\t\t\t\tx=\"14\"\r\n\t\t\t\t\t\t\ty=\"3\"\r\n\t\t\t\t\t\t\trx=\"1\"\r\n\t\t\t\t\t\t\tvariants={tileVariants}\r\n\t\t\t\t\t\t\tcustom={1}\r\n\t\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<motion.rect\r\n\t\t\t\t\t\t\twidth=\"7\"\r\n\t\t\t\t\t\t\theight=\"7\"\r\n\t\t\t\t\t\t\tx=\"14\"\r\n\t\t\t\t\t\t\ty=\"14\"\r\n\t\t\t\t\t\t\trx=\"1\"\r\n\t\t\t\t\t\t\tvariants={tileVariants}\r\n\t\t\t\t\t\t\tcustom={2}\r\n\t\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<motion.rect\r\n\t\t\t\t\t\t\twidth=\"7\"\r\n\t\t\t\t\t\t\theight=\"7\"\r\n\t\t\t\t\t\t\tx=\"3\"\r\n\t\t\t\t\t\t\ty=\"14\"\r\n\t\t\t\t\t\t\trx=\"1\"\r\n\t\t\t\t\t\t\tvariants={tileVariants}\r\n\t\t\t\t\t\t\tcustom={3}\r\n\t\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<motion.rect\r\n\t\t\t\t\t\t\tx=\"2\"\r\n\t\t\t\t\t\t\ty=\"2\"\r\n\t\t\t\t\t\t\twidth=\"20\"\r\n\t\t\t\t\t\t\theight=\"20\"\r\n\t\t\t\t\t\t\trx=\"3\"\r\n\t\t\t\t\t\t\tfill=\"url(#grid-sweep)\"\r\n\t\t\t\t\t\t\tvariants={sweepVariants}\r\n\t\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\t\t\tstyle={{ pointerEvents: \"none\" }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</motion.g>\r\n\t\t\t\t</motion.svg>\r\n\t\t\t</motion.div>\r\n\t\t);\r\n\t},\r\n);\r\n\r\nLayoutGridIcon.displayName = \"LayoutGridIcon\";\r\nexport { LayoutGridIcon };\r\n",
      "type": "registry:ui"
    }
  ]
}