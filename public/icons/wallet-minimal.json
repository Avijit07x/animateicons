{
  "name": "wallet-minimal",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "keywords": [
    "money",
    "finance",
    "payment",
    "cash",
    "billfold",
    "purse"
  ],
  "files": [
    {
      "path": "WalletMinimalIcon.tsx",
      "content": "\"use client\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\r\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\r\n\r\nexport interface WalletMinimalIconHandle {\r\n\tstartAnimation: () => void;\r\n\tstopAnimation: () => void;\r\n}\r\n\r\ninterface WalletMinimalIconProps extends HTMLMotionProps<\"div\"> {\r\n\tsize?: number;\r\n}\r\n\r\nconst WalletMinimalIcon = forwardRef<\r\n\tWalletMinimalIconHandle,\r\n\tWalletMinimalIconProps\r\n>(({ onMouseEnter, onMouseLeave, className, size = 28, ...props }, ref) => {\r\n\tconst controls = useAnimation();\r\n\tconst reduced = useReducedMotion();\r\n\tconst isControlled = useRef(false);\r\n\r\n\tuseImperativeHandle(ref, () => {\r\n\t\tisControlled.current = true;\r\n\t\treturn {\r\n\t\t\tstartAnimation: () =>\r\n\t\t\t\treduced ? controls.start(\"normal\") : controls.start(\"animate\"),\r\n\t\t\tstopAnimation: () => controls.start(\"normal\"),\r\n\t\t};\r\n\t});\r\n\r\n\tconst handleEnter = useCallback(\r\n\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\r\n\t\t\tif (reduced) return;\r\n\t\t\tif (!isControlled.current) controls.start(\"animate\");\r\n\t\t\telse onMouseEnter?.(e as any);\r\n\t\t},\r\n\t\t[controls, reduced, onMouseEnter],\r\n\t);\r\n\r\n\tconst handleLeave = useCallback(\r\n\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\r\n\t\t\tif (!isControlled.current) controls.start(\"normal\");\r\n\t\t\telse onMouseLeave?.(e as any);\r\n\t\t},\r\n\t\t[controls, onMouseLeave],\r\n\t);\r\n\r\n\tconst wrapperVariants: Variants = {\r\n\t\tnormal: { rotate: 0, scale: 1 },\r\n\t\tanimate: {\r\n\t\t\trotate: [-2, 0, -1, 0],\r\n\t\t\tscale: [1, 1.02, 1],\r\n\t\t\ttransition: { duration: 0.9, ease: \"easeInOut\" as const },\r\n\t\t},\r\n\t};\r\n\r\n\tconst outlineVariants: Variants = {\r\n\t\tnormal: { strokeDashoffset: 0, opacity: 1 },\r\n\t\tanimate: {\r\n\t\t\tstrokeDashoffset: [120, 0],\r\n\t\t\topacity: [0.4, 1],\r\n\t\t\ttransition: { duration: 0.8, ease: \"easeInOut\" as const },\r\n\t\t},\r\n\t};\r\n\r\n\tconst dotPopVariants: Variants = {\r\n\t\tnormal: { scale: 1, opacity: 1 },\r\n\t\tanimate: {\r\n\t\t\tscale: [0.7, 1.25, 1],\r\n\t\t\topacity: [0, 1],\r\n\t\t\ttransition: { duration: 0.45, delay: 0.4, ease: \"easeOut\" as const },\r\n\t\t},\r\n\t};\r\n\r\n\tconst latchSnapVariants: Variants = {\r\n\t\tnormal: { x: 0, opacity: 0 },\r\n\t\tanimate: {\r\n\t\t\tx: [0, 3, 0],\r\n\t\t\topacity: [0, 1, 0],\r\n\t\t\ttransition: { duration: 0.5, delay: 0.5, ease: \"easeInOut\" as const },\r\n\t\t},\r\n\t};\r\n\r\n\tconst shimmerVariants: Variants = {\r\n\t\tnormal: { x: -18, opacity: 0 },\r\n\t\tanimate: {\r\n\t\t\tx: [-18, 22],\r\n\t\t\topacity: [0, 0.35, 0],\r\n\t\t\ttransition: { duration: 0.8, delay: 0.25, ease: \"easeInOut\" as const },\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<motion.div\r\n\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\r\n\t\t\tonMouseEnter={handleEnter}\r\n\t\t\tonMouseLeave={handleLeave}\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t<motion.svg\r\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\twidth={size}\r\n\t\t\t\theight={size}\r\n\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\tfill=\"none\"\r\n\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\tstrokeWidth=\"2\"\r\n\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\tstrokeLinejoin=\"round\"\r\n\t\t\t\tclassName=\"lucide lucide-wallet-minimal-icon lucide-wallet-minimal\"\r\n\t\t\t>\r\n\t\t\t\t<motion.g\r\n\t\t\t\t\tvariants={wrapperVariants}\r\n\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\tanimate={controls}\r\n\t\t\t\t>\r\n\t\t\t\t\t<defs>\r\n\t\t\t\t\t\t<linearGradient id=\"wm-shimmer\" x1=\"0\" x2=\"1\" y1=\"0\" y2=\"0\">\r\n\t\t\t\t\t\t\t<stop offset=\"0%\" stopColor=\"currentColor\" stopOpacity=\"0\" />\r\n\t\t\t\t\t\t\t<stop offset=\"50%\" stopColor=\"currentColor\" stopOpacity=\"0.35\" />\r\n\t\t\t\t\t\t\t<stop offset=\"100%\" stopColor=\"currentColor\" stopOpacity=\"0\" />\r\n\t\t\t\t\t\t</linearGradient>\r\n\t\t\t\t\t</defs>\r\n\r\n\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\td=\"M7 7h12a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14\"\r\n\t\t\t\t\t\tstrokeDasharray=\"120\"\r\n\t\t\t\t\t\tstrokeDashoffset=\"120\"\r\n\t\t\t\t\t\tvariants={outlineVariants}\r\n\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\td=\"M17 14h.01\"\r\n\t\t\t\t\t\tvariants={dotPopVariants}\r\n\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\td=\"M17 14h.01\"\r\n\t\t\t\t\t\tvariants={latchSnapVariants}\r\n\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<motion.rect\r\n\t\t\t\t\t\tx=\"2\"\r\n\t\t\t\t\t\ty=\"4\"\r\n\t\t\t\t\t\twidth=\"20\"\r\n\t\t\t\t\t\theight=\"16\"\r\n\t\t\t\t\t\trx=\"3\"\r\n\t\t\t\t\t\tfill=\"url(#wm-shimmer)\"\r\n\t\t\t\t\t\tvariants={shimmerVariants}\r\n\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\t\tstyle={{ pointerEvents: \"none\" }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</motion.g>\r\n\t\t\t</motion.svg>\r\n\t\t</motion.div>\r\n\t);\r\n});\r\n\r\nWalletMinimalIcon.displayName = \"WalletMinimalIcon\";\r\nexport { WalletMinimalIcon };\r\n",
      "type": "registry:ui"
    }
  ]
}