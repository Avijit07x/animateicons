{
  "name": "user-round-cog",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "keywords": [
    "settings",
    "preferences",
    "account",
    "configuration",
    "user",
    "person",
    "profile",
    "member",
    "avatar",
    "identity",
    "login",
    "logout",
    "customer"
  ],
  "files": [
    {
      "path": "UserRoundCogIcon.tsx",
      "content": "\"use client\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\r\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\r\n\r\nexport interface UserRoundCogHandle {\r\n\tstartAnimation: () => void;\r\n\tstopAnimation: () => void;\r\n}\r\n\r\ninterface UserRoundCogProps extends HTMLMotionProps<\"div\"> {\r\n\tsize?: number;\r\n}\r\n\r\nconst UserRoundCogIcon = forwardRef<UserRoundCogHandle, UserRoundCogProps>(\r\n\t({ onMouseEnter, onMouseLeave, className, size = 28, ...props }, ref) => {\r\n\t\tconst controls = useAnimation();\r\n\t\tconst reduced = useReducedMotion();\r\n\t\tconst isControlled = useRef(false);\r\n\r\n\t\tuseImperativeHandle(ref, () => {\r\n\t\t\tisControlled.current = true;\r\n\t\t\treturn {\r\n\t\t\t\tstartAnimation: () =>\r\n\t\t\t\t\treduced ? controls.start(\"normal\") : controls.start(\"animate\"),\r\n\t\t\t\tstopAnimation: () => controls.start(\"normal\"),\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tconst handleEnter = useCallback(\r\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\r\n\t\t\t\tif (reduced) return;\r\n\t\t\t\tif (!isControlled.current) controls.start(\"animate\");\r\n\t\t\t\telse onMouseEnter?.(e as any);\r\n\t\t\t},\r\n\t\t\t[controls, reduced, onMouseEnter],\r\n\t\t);\r\n\r\n\t\tconst handleLeave = useCallback(\r\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\r\n\t\t\t\tif (!isControlled.current) controls.start(\"normal\");\r\n\t\t\t\telse onMouseLeave?.(e as any);\r\n\t\t\t},\r\n\t\t\t[controls, onMouseLeave],\r\n\t\t);\r\n\r\n\t\tconst bodyVariants: Variants = {\r\n\t\t\tnormal: { strokeDashoffset: 0, opacity: 1 },\r\n\t\t\tanimate: {\r\n\t\t\t\tstrokeDashoffset: [40, 0],\r\n\t\t\t\topacity: [0.3, 1],\r\n\t\t\t\ttransition: { duration: 0.6, ease: \"easeInOut\" },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst headVariants: Variants = {\r\n\t\t\tnormal: { scale: 1, opacity: 1 },\r\n\t\t\tanimate: {\r\n\t\t\t\tscale: [0.5, 1.2, 1],\r\n\t\t\t\topacity: [0, 1],\r\n\t\t\t\ttransition: { duration: 0.6, ease: \"easeOut\" },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst cogVariants: Variants = {\r\n\t\t\tnormal: { rotate: 0, scale: 1, opacity: 1 },\r\n\t\t\tanimate: {\r\n\t\t\t\trotate: 360,\r\n\t\t\t\tscale: [0.9, 1.2, 1],\r\n\t\t\t\topacity: 1,\r\n\t\t\t\ttransition: { duration: 1.2, ease: \"easeInOut\" },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<motion.div\r\n\t\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\r\n\t\t\t\tonMouseEnter={handleEnter}\r\n\t\t\t\tonMouseLeave={handleLeave}\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t<motion.svg\r\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\twidth={size}\r\n\t\t\t\t\theight={size}\r\n\t\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\tstrokeWidth=\"2\"\r\n\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t\tstrokeLinejoin=\"round\"\r\n\t\t\t\t\tclassName=\"lucide lucide-user-round-cog-icon lucide-user-round-cog\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\td=\"M2 21a8 8 0 0 1 10.434-7.62\"\r\n\t\t\t\t\t\tstrokeDasharray=\"40\"\r\n\t\t\t\t\t\tstrokeDashoffset=\"40\"\r\n\t\t\t\t\t\tvariants={bodyVariants}\r\n\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<motion.circle\r\n\t\t\t\t\t\tcx=\"10\"\r\n\t\t\t\t\t\tcy=\"8\"\r\n\t\t\t\t\t\tr=\"5\"\r\n\t\t\t\t\t\tvariants={headVariants}\r\n\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<motion.g variants={cogVariants} initial=\"normal\" animate={controls}>\r\n\t\t\t\t\t\t<motion.circle cx=\"18\" cy=\"18\" r=\"3\" />\r\n\t\t\t\t\t\t<motion.path d=\"m14.305 19.53.923-.382\" />\r\n\t\t\t\t\t\t<motion.path d=\"m15.228 16.852-.923-.383\" />\r\n\t\t\t\t\t\t<motion.path d=\"m16.852 15.228-.383-.923\" />\r\n\t\t\t\t\t\t<motion.path d=\"m16.852 20.772-.383.924\" />\r\n\t\t\t\t\t\t<motion.path d=\"m19.148 15.228.383-.923\" />\r\n\t\t\t\t\t\t<motion.path d=\"m19.53 21.696-.382-.924\" />\r\n\t\t\t\t\t\t<motion.path d=\"m20.772 16.852.924-.383\" />\r\n\t\t\t\t\t\t<motion.path d=\"m20.772 19.148.924.383\" />\r\n\t\t\t\t\t</motion.g>\r\n\t\t\t\t</motion.svg>\r\n\t\t\t</motion.div>\r\n\t\t);\r\n\t},\r\n);\r\n\r\nUserRoundCogIcon.displayName = \"UserRoundCogIcon\";\r\nexport { UserRoundCogIcon };\r\n",
      "type": "registry:ui"
    }
  ]
}