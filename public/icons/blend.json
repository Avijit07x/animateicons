{
  "name": "blend",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "keywords": [
    "mode",
    "overlay",
    "multiply",
    "screen",
    "opacity",
    "transparency",
    "alpha",
    "filters",
    "lenses",
    "mixed",
    "shades",
    "tints",
    "hues",
    "saturation",
    "brightness",
    "overlap",
    "colors",
    "colours"
  ],
  "files": [
    {
      "path": "BlendIcon.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\nimport { motion, useAnimation } from \"motion/react\";\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\n\nexport interface BlendHandle {\n\tstartAnimation: () => void;\n\tstopAnimation: () => void;\n}\n\ninterface BlendProps extends HTMLMotionProps<\"div\"> {\n\tsize?: number;\n}\n\nconst BlendIcon = forwardRef<BlendHandle, BlendProps>(\n\t({ className, size = 28, ...props }, ref) => {\n\t\tconst controls = useAnimation();\n\t\tconst isControlled = useRef(false);\n\n\t\tuseImperativeHandle(ref, () => {\n\t\t\tisControlled.current = true;\n\t\t\treturn {\n\t\t\t\tstartAnimation: () => controls.start(\"animate\"),\n\t\t\t\tstopAnimation: () => controls.start(\"normal\"),\n\t\t\t};\n\t\t});\n\n\t\tconst handleEnter = useCallback(() => {\n\t\t\tif (!isControlled.current) controls.start(\"animate\");\n\t\t}, [controls]);\n\n\t\tconst handleLeave = useCallback(() => {\n\t\t\tif (!isControlled.current) controls.start(\"normal\");\n\t\t}, [controls]);\n\n\t\tconst groupVariants: Variants = {\n\t\t\tnormal: { rotate: 0, scale: 1 },\n\t\t\tanimate: {\n\t\t\t\trotate: [0, -1.5, 1.5, 0],\n\t\t\t\tscale: [1, 1.02, 1],\n\t\t\t\ttransition: { duration: 0.7, ease: \"easeInOut\" as const },\n\t\t\t},\n\t\t};\n\n\t\tconst leftCircle: Variants = {\n\t\t\tnormal: { strokeDashoffset: 0, opacity: 1, x: 0 },\n\t\t\tanimate: {\n\t\t\t\tstrokeDashoffset: [48, 0],\n\t\t\t\topacity: [0.45, 1],\n\t\t\t\tx: [0, 2, 4],\n\t\t\t\ttransition: { duration: 0.6, ease: \"easeInOut\" as const },\n\t\t\t},\n\t\t};\n\n\t\tconst rightCircle: Variants = {\n\t\t\tnormal: { strokeDashoffset: 0, opacity: 1, x: 0 },\n\t\t\tanimate: {\n\t\t\t\tstrokeDashoffset: [48, 0],\n\t\t\t\topacity: [0.45, 1],\n\t\t\t\tx: [0, -2, -4],\n\t\t\t\ttransition: { duration: 0.6, ease: \"easeInOut\" as const, delay: 0.06 },\n\t\t\t},\n\t\t};\n\n\t\tconst overlapPulse: Variants = {\n\t\t\tnormal: { scale: 1, opacity: 1 },\n\t\t\tanimate: {\n\t\t\t\tscale: [1, 1.06, 1],\n\t\t\t\topacity: [0.9, 1, 1],\n\t\t\t\ttransition: { duration: 0.5, ease: \"easeInOut\" as const, delay: 0.18 },\n\t\t\t},\n\t\t};\n\n\t\treturn (\n\t\t\t<motion.div\n\t\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\n\t\t\t\tonMouseEnter={handleEnter}\n\t\t\t\tonMouseLeave={handleLeave}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t<motion.svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\twidth={size}\n\t\t\t\t\theight={size}\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t\tclassName=\"lucide lucide-blend-icon lucide-blend\"\n\t\t\t\t>\n\t\t\t\t\t<motion.g\n\t\t\t\t\t\tvariants={groupVariants}\n\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\tanimate={controls}\n\t\t\t\t\t>\n\t\t\t\t\t\t<motion.circle\n\t\t\t\t\t\t\tcx=\"9\"\n\t\t\t\t\t\t\tcy=\"9\"\n\t\t\t\t\t\t\tr=\"7\"\n\t\t\t\t\t\t\tstrokeDasharray=\"48\"\n\t\t\t\t\t\t\tstrokeDashoffset=\"48\"\n\t\t\t\t\t\t\tvariants={leftCircle}\n\t\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\t\tanimate={controls}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<motion.g\n\t\t\t\t\t\t\tvariants={overlapPulse}\n\t\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\t\tanimate={controls}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<motion.circle\n\t\t\t\t\t\t\t\tcx=\"15\"\n\t\t\t\t\t\t\t\tcy=\"15\"\n\t\t\t\t\t\t\t\tr=\"7\"\n\t\t\t\t\t\t\t\tstrokeDasharray=\"48\"\n\t\t\t\t\t\t\t\tstrokeDashoffset=\"48\"\n\t\t\t\t\t\t\t\tvariants={rightCircle}\n\t\t\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\t\t\tanimate={controls}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</motion.g>\n\t\t\t\t\t</motion.g>\n\t\t\t\t</motion.svg>\n\t\t\t</motion.div>\n\t\t);\n\t},\n);\n\nBlendIcon.displayName = \"BlendIcon\";\nexport { BlendIcon };\n",
      "type": "registry:ui"
    }
  ]
}