{
  "name": "dashboard",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "keywords": [
    "masonry",
    "brick"
  ],
  "files": [
    {
      "path": "DashboardIcon.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\nimport { motion, useAnimation } from \"motion/react\";\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\n\nexport interface DashboardIconHandle {\n\tstartAnimation: () => void;\n\tstopAnimation: () => void;\n}\n\ninterface DashboardIconProps extends HTMLMotionProps<\"div\"> {\n\tsize?: number;\n}\n\nconst DashboardIcon = forwardRef<DashboardIconHandle, DashboardIconProps>(\n\t({ onMouseEnter, onMouseLeave, className, size = 28, ...props }, ref) => {\n\t\tconst controls = useAnimation();\n\t\tconst isControlled = useRef(false);\n\n\t\tuseImperativeHandle(ref, () => {\n\t\t\tisControlled.current = true;\n\t\t\treturn {\n\t\t\t\tstartAnimation: () => controls.start(\"animate\"),\n\t\t\t\tstopAnimation: () => controls.start(\"normal\"),\n\t\t\t};\n\t\t});\n\n\t\tconst handleEnter = useCallback(() => {\n\t\t\tif (!isControlled.current) controls.start(\"animate\");\n\t\t}, [controls]);\n\n\t\tconst handleLeave = useCallback(() => {\n\t\t\tif (!isControlled.current) controls.start(\"normal\");\n\t\t}, [controls]);\n\n\t\tconst iconVariants: Variants = {\n\t\t\tnormal: { scale: 1, rotate: 0 },\n\t\t\tanimate: {\n\t\t\t\tscale: [1, 1.05, 0.95, 1],\n\t\t\t\trotate: [0, -2, 2, 0],\n\t\t\t\ttransition: { duration: 1.3, ease: \"easeInOut\", repeat: Infinity },\n\t\t\t},\n\t\t};\n\n\t\tconst tileVariants: Variants = {\n\t\t\tnormal: { opacity: 1, scale: 1, y: 0 },\n\t\t\tanimate: (i: number) => ({\n\t\t\t\topacity: [0.5, 1, 0.8, 1],\n\t\t\t\tscale: [0.9, 1.1, 1],\n\t\t\t\ty: [2, -2, 0],\n\t\t\t\ttransition: {\n\t\t\t\t\tduration: 1.2,\n\t\t\t\t\tease: \"easeInOut\",\n\t\t\t\t\trepeat: Infinity,\n\t\t\t\t\tdelay: i * 0.2,\n\t\t\t\t},\n\t\t\t}),\n\t\t};\n\n\t\treturn (\n\t\t\t<motion.div\n\t\t\t\tclassName={cn(\"inline-flex\", className)}\n\t\t\t\tonMouseEnter={handleEnter}\n\t\t\t\tonMouseLeave={handleLeave}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t<motion.svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\twidth={size}\n\t\t\t\t\theight={size}\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t\tanimate={controls}\n\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\tvariants={iconVariants}\n\t\t\t\t>\n\t\t\t\t\t<motion.rect\n\t\t\t\t\t\twidth=\"7\"\n\t\t\t\t\t\theight=\"9\"\n\t\t\t\t\t\tx=\"3\"\n\t\t\t\t\t\ty=\"3\"\n\t\t\t\t\t\trx=\"1\"\n\t\t\t\t\t\tvariants={tileVariants}\n\t\t\t\t\t\tcustom={0}\n\t\t\t\t\t/>\n\t\t\t\t\t<motion.rect\n\t\t\t\t\t\twidth=\"7\"\n\t\t\t\t\t\theight=\"5\"\n\t\t\t\t\t\tx=\"14\"\n\t\t\t\t\t\ty=\"3\"\n\t\t\t\t\t\trx=\"1\"\n\t\t\t\t\t\tvariants={tileVariants}\n\t\t\t\t\t\tcustom={1}\n\t\t\t\t\t/>\n\t\t\t\t\t<motion.rect\n\t\t\t\t\t\twidth=\"7\"\n\t\t\t\t\t\theight=\"9\"\n\t\t\t\t\t\tx=\"14\"\n\t\t\t\t\t\ty=\"12\"\n\t\t\t\t\t\trx=\"1\"\n\t\t\t\t\t\tvariants={tileVariants}\n\t\t\t\t\t\tcustom={2}\n\t\t\t\t\t/>\n\t\t\t\t\t<motion.rect\n\t\t\t\t\t\twidth=\"7\"\n\t\t\t\t\t\theight=\"5\"\n\t\t\t\t\t\tx=\"3\"\n\t\t\t\t\t\ty=\"16\"\n\t\t\t\t\t\trx=\"1\"\n\t\t\t\t\t\tvariants={tileVariants}\n\t\t\t\t\t\tcustom={3}\n\t\t\t\t\t/>\n\t\t\t\t</motion.svg>\n\t\t\t</motion.div>\n\t\t);\n\t},\n);\n\nDashboardIcon.displayName = \"DashboardIcon\";\nexport { DashboardIcon };\n",
      "type": "registry:ui"
    }
  ]
}