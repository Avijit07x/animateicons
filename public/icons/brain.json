{
  "name": "brain",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "keywords": [
    "intelligence",
    "mind",
    "thinking",
    "cognition",
    "learning",
    "creativity",
    "memory",
    "neuroscience",
    "psychology",
    "idea",
    "thought",
    "smart",
    "knowledge",
    "wisdom"
  ],
  "files": [
    {
      "path": "BrainIcon.tsx",
      "content": "\"use client\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\r\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\r\nimport {\r\n\tforwardRef,\r\n\tuseCallback,\r\n\tuseImperativeHandle,\r\n\tuseMemo,\r\n\tuseRef,\r\n} from \"react\";\r\n\r\nexport interface BrainHandle {\r\n\tstartAnimation: () => void;\r\n\tstopAnimation: () => void;\r\n}\r\n\r\ninterface BrainProps extends HTMLMotionProps<\"div\"> {\r\n\tsize?: number;\r\n}\r\n\r\nconst BrainIcon = forwardRef<BrainHandle, BrainProps>(\r\n\t({ onMouseEnter, onMouseLeave, className, size = 28, ...props }, ref) => {\r\n\t\tconst groupControls = useAnimation();\r\n\t\tconst pulseControls = useAnimation();\r\n\t\tconst sparkControlsL = useAnimation();\r\n\t\tconst sparkControlsR = useAnimation();\r\n\t\tconst reduced = useReducedMotion();\r\n\t\tconst isControlled = useRef(false);\r\n\r\n\t\tuseImperativeHandle(ref, () => {\r\n\t\t\tisControlled.current = true;\r\n\t\t\treturn {\r\n\t\t\t\tstartAnimation: () => {\r\n\t\t\t\t\tif (reduced) {\r\n\t\t\t\t\t\tgroupControls.start(\"normal\");\r\n\t\t\t\t\t\tpulseControls.start(\"normal\");\r\n\t\t\t\t\t\tsparkControlsL.start(\"normal\");\r\n\t\t\t\t\t\tsparkControlsR.start(\"normal\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tgroupControls.start(\"animate\");\r\n\t\t\t\t\t\tpulseControls.start(\"animate\");\r\n\t\t\t\t\t\tsparkControlsL.start(\"animate\");\r\n\t\t\t\t\t\tsparkControlsR.start(\"animate\");\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tstopAnimation: () => {\r\n\t\t\t\t\tgroupControls.start(\"normal\");\r\n\t\t\t\t\tpulseControls.start(\"normal\");\r\n\t\t\t\t\tsparkControlsL.start(\"normal\");\r\n\t\t\t\t\tsparkControlsR.start(\"normal\");\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tconst handleEnter = useCallback(\r\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\r\n\t\t\t\tif (reduced) return;\r\n\t\t\t\tif (!isControlled.current) {\r\n\t\t\t\t\tgroupControls.start(\"animate\");\r\n\t\t\t\t\tpulseControls.start(\"animate\");\r\n\t\t\t\t\tsparkControlsL.start(\"animate\");\r\n\t\t\t\t\tsparkControlsR.start(\"animate\");\r\n\t\t\t\t} else onMouseLeave?.(e as any);\r\n\t\t\t},\r\n\t\t\t[groupControls, pulseControls, sparkControlsL, sparkControlsR],\r\n\t\t);\r\n\r\n\t\tconst handleLeave = useCallback(\r\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\r\n\t\t\t\tif (!isControlled.current) {\r\n\t\t\t\t\tgroupControls.start(\"normal\");\r\n\t\t\t\t\tpulseControls.start(\"normal\");\r\n\t\t\t\t\tsparkControlsL.start(\"normal\");\r\n\t\t\t\t\tsparkControlsR.start(\"normal\");\r\n\t\t\t\t} else onMouseLeave?.(e as any);\r\n\t\t\t},\r\n\t\t\t[groupControls, pulseControls, sparkControlsL, sparkControlsR],\r\n\t\t);\r\n\r\n\t\tconst microTilt: Variants = useMemo(\r\n\t\t\t() => ({\r\n\t\t\t\tnormal: { rotate: 0, scale: 1 },\r\n\t\t\t\tanimate: {\r\n\t\t\t\t\trotate: [0, -2.2, 1.2, 0],\r\n\t\t\t\t\tscale: [1, 1.015, 1],\r\n\t\t\t\t\ttransition: { duration: 0.7, ease: \"easeInOut\" },\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t\t[],\r\n\t\t);\r\n\r\n\t\tconst spinePulse: Variants = useMemo(\r\n\t\t\t() => ({\r\n\t\t\t\tnormal: { pathLength: 1, opacity: 1 },\r\n\t\t\t\tanimate: {\r\n\t\t\t\t\tpathLength: [0, 1],\r\n\t\t\t\t\topacity: [0.55, 1],\r\n\t\t\t\t\ttransition: { duration: 0.5, ease: \"easeInOut\", delay: 0.06 },\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t\t[],\r\n\t\t);\r\n\r\n\t\tconst lobeBreatheA: Variants = useMemo(\r\n\t\t\t() => ({\r\n\t\t\t\tnormal: { pathLength: 1, opacity: 1, scale: 1 },\r\n\t\t\t\tanimate: {\r\n\t\t\t\t\tpathLength: [0, 1],\r\n\t\t\t\t\topacity: [0.6, 1],\r\n\t\t\t\t\tscale: [0.98, 1.02, 1],\r\n\t\t\t\t\ttransition: { duration: 0.6, ease: \"easeInOut\", delay: 0.12 },\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t\t[],\r\n\t\t);\r\n\r\n\t\tconst lobeBreatheB: Variants = useMemo(\r\n\t\t\t() => ({\r\n\t\t\t\tnormal: { pathLength: 1, opacity: 1, scale: 1 },\r\n\t\t\t\tanimate: {\r\n\t\t\t\t\tpathLength: [0, 1],\r\n\t\t\t\t\topacity: [0.6, 1],\r\n\t\t\t\t\tscale: [1.02, 0.98, 1],\r\n\t\t\t\t\ttransition: { duration: 0.62, ease: \"easeInOut\", delay: 0.18 },\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t\t[],\r\n\t\t);\r\n\r\n\t\tconst synapseSparkL: Variants = useMemo(\r\n\t\t\t() => ({\r\n\t\t\t\tnormal: { pathLength: 0, opacity: 0 },\r\n\t\t\t\tanimate: {\r\n\t\t\t\t\tpathLength: [0, 1],\r\n\t\t\t\t\topacity: [0, 1, 0],\r\n\t\t\t\t\ttransition: { duration: 0.55, ease: \"easeInOut\", delay: 0.26 },\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t\t[],\r\n\t\t);\r\n\r\n\t\tconst synapseSparkR: Variants = useMemo(\r\n\t\t\t() => ({\r\n\t\t\t\tnormal: { pathLength: 0, opacity: 0 },\r\n\t\t\t\tanimate: {\r\n\t\t\t\t\tpathLength: [0, 1],\r\n\t\t\t\t\topacity: [0, 1, 0],\r\n\t\t\t\t\ttransition: { duration: 0.55, ease: \"easeInOut\", delay: 0.34 },\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t\t[],\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<motion.div\r\n\t\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\r\n\t\t\t\tonMouseEnter={handleEnter}\r\n\t\t\t\tonMouseLeave={handleLeave}\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t<motion.svg\r\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\twidth={size}\r\n\t\t\t\t\theight={size}\r\n\t\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\tstrokeWidth=\"2\"\r\n\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t\tstrokeLinejoin=\"round\"\r\n\t\t\t\t\tclassName=\"lucide lucide-brain-icon lucide-brain\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<motion.g\r\n\t\t\t\t\t\tvariants={microTilt}\r\n\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\tanimate={groupControls}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\t\td=\"M12 18V5\"\r\n\t\t\t\t\t\t\tvariants={spinePulse}\r\n\t\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\t\tanimate={pulseControls}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\t\td=\"M15 13a4.17 4.17 0 0 1-3-4 4.17 4.17 0 0 1-3 4\"\r\n\t\t\t\t\t\t\tvariants={lobeBreatheA}\r\n\t\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\t\tanimate={groupControls}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\t\td=\"M17.598 6.5A3 3 0 1 0 12 5a3 3 0 1 0-5.598 1.5\"\r\n\t\t\t\t\t\t\tvariants={lobeBreatheB}\r\n\t\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\t\tanimate={groupControls}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\t\td=\"M17.997 5.125a4 4 0 0 1 2.526 5.77\"\r\n\t\t\t\t\t\t\tvariants={lobeBreatheA}\r\n\t\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\t\tanimate={groupControls}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\t\td=\"M18 18a4 4 0 0 0 2-7.464\"\r\n\t\t\t\t\t\t\tvariants={lobeBreatheB}\r\n\t\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\t\tanimate={groupControls}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\t\td=\"M19.967 17.483A4 4 0 1 1 12 18a4 4 0 1 1-7.967-.517\"\r\n\t\t\t\t\t\t\tvariants={lobeBreatheA}\r\n\t\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\t\tanimate={groupControls}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\t\td=\"M6 18a4 4 0 0 1-2-7.464\"\r\n\t\t\t\t\t\t\tvariants={lobeBreatheB}\r\n\t\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\t\tanimate={groupControls}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\t\td=\"M6.003 5.125a4 4 0 0 0-2.526 5.77\"\r\n\t\t\t\t\t\t\tvariants={lobeBreatheA}\r\n\t\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\t\tanimate={groupControls}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\t\td=\"M8.5 11.6 10.2 10.4\"\r\n\t\t\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\t\t\tstrokeWidth=\"1.4\"\r\n\t\t\t\t\t\t\tvariants={synapseSparkL}\r\n\t\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\t\tanimate={sparkControlsL}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\t\td=\"M13.8 9.4 15.6 10.7\"\r\n\t\t\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\t\t\tstrokeWidth=\"1.4\"\r\n\t\t\t\t\t\t\tvariants={synapseSparkR}\r\n\t\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\t\tanimate={sparkControlsR}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</motion.g>\r\n\t\t\t\t</motion.svg>\r\n\t\t\t</motion.div>\r\n\t\t);\r\n\t},\r\n);\r\n\r\nBrainIcon.displayName = \"BrainIcon\";\r\nexport { BrainIcon };\r\n",
      "type": "registry:ui"
    }
  ]
}