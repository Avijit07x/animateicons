{
  "name": "search",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "keywords": [
    "find",
    "magnifier",
    "magnifying glass",
    "lens",
    "zoom"
  ],
  "files": [
    {
      "path": "SearchIcon.tsx",
      "content": "\"use client\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\r\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\r\n\r\nexport interface SearchHandle {\r\n\tstartAnimation: () => void;\r\n\tstopAnimation: () => void;\r\n}\r\n\r\ninterface SearchProps extends HTMLMotionProps<\"div\"> {\r\n\tsize?: number;\r\n}\r\n\r\nconst SearchIcon = forwardRef<SearchHandle, SearchProps>(\r\n\t({ onMouseEnter, onMouseLeave, className, size = 28, ...props }, ref) => {\r\n\t\tconst controls = useAnimation();\r\n\t\tconst reduced = useReducedMotion();\r\n\t\tconst isControlled = useRef(false);\r\n\r\n\t\tuseImperativeHandle(ref, () => {\r\n\t\t\tisControlled.current = true;\r\n\t\t\treturn {\r\n\t\t\t\tstartAnimation: () =>\r\n\t\t\t\t\treduced ? controls.start(\"normal\") : controls.start(\"animate\"),\r\n\t\t\t\tstopAnimation: () => controls.start(\"normal\"),\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tconst handleEnter = useCallback(\r\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\r\n\t\t\t\tif (reduced) return;\r\n\t\t\t\tif (!isControlled.current) controls.start(\"animate\");\r\n\t\t\t\telse onMouseEnter?.(e as any);\r\n\t\t\t},\r\n\t\t\t[controls, reduced, onMouseEnter],\r\n\t\t);\r\n\r\n\t\tconst handleLeave = useCallback(\r\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\r\n\t\t\t\tif (!isControlled.current) controls.start(\"normal\");\r\n\t\t\t\telse onMouseLeave?.(e as any);\r\n\t\t\t},\r\n\t\t\t[controls, onMouseLeave],\r\n\t\t);\r\n\r\n\t\tconst circleVariants: Variants = {\r\n\t\t\tnormal: { strokeDashoffset: 0, opacity: 1, scale: 1 },\r\n\t\t\tanimate: {\r\n\t\t\t\tstrokeDashoffset: [50, 0],\r\n\t\t\t\topacity: [0.3, 1],\r\n\t\t\t\tscale: [1, 1.1, 1],\r\n\t\t\t\ttransition: { duration: 0.8, ease: \"easeInOut\" as const },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst handleVariants: Variants = {\r\n\t\t\tnormal: { strokeDashoffset: 0, opacity: 1 },\r\n\t\t\tanimate: {\r\n\t\t\t\tstrokeDashoffset: [20, 0],\r\n\t\t\t\topacity: [0, 1],\r\n\t\t\t\ttransition: { duration: 0.6, delay: 0.3, ease: \"easeInOut\" as const },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst groupVariants: Variants = {\r\n\t\t\tnormal: { rotate: 0, scale: 1 },\r\n\t\t\tanimate: {\r\n\t\t\t\trotate: [0, 5, -5, 0],\r\n\t\t\t\tscale: [1, 1.05, 1],\r\n\t\t\t\ttransition: { duration: 1, ease: \"easeInOut\" as const },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<motion.div\r\n\t\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\r\n\t\t\t\tonMouseEnter={handleEnter}\r\n\t\t\t\tonMouseLeave={handleLeave}\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t<motion.svg\r\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\twidth={size}\r\n\t\t\t\t\theight={size}\r\n\t\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\tstrokeWidth=\"2\"\r\n\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t\tstrokeLinejoin=\"round\"\r\n\t\t\t\t\tclassName=\"lucide lucide-search-icon lucide-search\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<motion.g\r\n\t\t\t\t\t\tvariants={groupVariants}\r\n\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<motion.circle\r\n\t\t\t\t\t\t\tcx=\"11\"\r\n\t\t\t\t\t\t\tcy=\"11\"\r\n\t\t\t\t\t\t\tr=\"8\"\r\n\t\t\t\t\t\t\tstrokeDasharray=\"50\"\r\n\t\t\t\t\t\t\tstrokeDashoffset=\"50\"\r\n\t\t\t\t\t\t\tvariants={circleVariants}\r\n\t\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\t\td=\"m21 21-4.34-4.34\"\r\n\t\t\t\t\t\t\tstrokeDasharray=\"20\"\r\n\t\t\t\t\t\t\tstrokeDashoffset=\"20\"\r\n\t\t\t\t\t\t\tvariants={handleVariants}\r\n\t\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</motion.g>\r\n\t\t\t\t</motion.svg>\r\n\t\t\t</motion.div>\r\n\t\t);\r\n\t},\r\n);\r\n\r\nSearchIcon.displayName = \"SearchIcon\";\r\nexport { SearchIcon };\r\n",
      "type": "registry:ui"
    }
  ]
}