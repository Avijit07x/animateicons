{
  "name": "key-square",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "keywords": [
    "password",
    "security",
    "access",
    "login",
    "authentication",
    "credentials",
    "key",
    "unlock",
    "lock",
    "private",
    "safe",
    "protection"
  ],
  "files": [
    {
      "path": "KeySquareIcon.tsx",
      "content": "\"use client\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\r\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\r\n\r\nexport interface KeySquareHandle {\r\n\tstartAnimation: () => void;\r\n\tstopAnimation: () => void;\r\n}\r\n\r\ninterface KeySquareProps extends HTMLMotionProps<\"div\"> {\r\n\tsize?: number;\r\n}\r\n\r\nconst KeySquareIcon = forwardRef<KeySquareHandle, KeySquareProps>(\r\n\t({ onMouseEnter, onMouseLeave, className, size = 28, ...props }, ref) => {\r\n\t\tconst controls = useAnimation();\r\n\t\tconst sparkControls = useAnimation();\r\n\t\tconst reduced = useReducedMotion();\r\n\t\tconst isControlled = useRef(false);\r\n\r\n\t\tuseImperativeHandle(ref, () => {\r\n\t\t\tisControlled.current = true;\r\n\t\t\treturn {\r\n\t\t\t\tstartAnimation: () => {\r\n\t\t\t\t\tif (reduced) {\r\n\t\t\t\t\t\tcontrols.start(\"normal\");\r\n\t\t\t\t\t\tsparkControls.start(\"normal\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcontrols.start(\"animate\");\r\n\t\t\t\t\t\tsparkControls.start(\"animate\");\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tstopAnimation: () => {\r\n\t\t\t\t\tcontrols.start(\"normal\");\r\n\t\t\t\t\tsparkControls.start(\"normal\");\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tconst handleEnter = useCallback(\r\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\r\n\t\t\t\tif (reduced) return;\r\n\t\t\t\tif (!isControlled.current) {\r\n\t\t\t\t\tcontrols.start(\"animate\");\r\n\t\t\t\t\tsparkControls.start(\"animate\");\r\n\t\t\t\t} else onMouseLeave?.(e as any);\r\n\t\t\t},\r\n\t\t\t[controls, sparkControls],\r\n\t\t);\r\n\r\n\t\tconst handleLeave = useCallback(\r\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\r\n\t\t\t\tif (!isControlled.current) {\r\n\t\t\t\t\tcontrols.start(\"normal\");\r\n\t\t\t\t\tsparkControls.start(\"normal\");\r\n\t\t\t\t} else onMouseLeave?.(e as any);\r\n\t\t\t},\r\n\t\t\t[controls, sparkControls],\r\n\t\t);\r\n\r\n\t\tconst settle: Variants = {\r\n\t\t\tnormal: { scale: 1, rotate: 0 },\r\n\t\t\tanimate: {\r\n\t\t\t\tscale: [1, 1.03, 0.995, 1],\r\n\t\t\t\trotate: [0, -3, 1, 0],\r\n\t\t\t\ttransition: { duration: 0.6, ease: \"easeInOut\" },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst linkPulse: Variants = {\r\n\t\t\tnormal: { pathLength: 1, opacity: 1 },\r\n\t\t\tanimate: {\r\n\t\t\t\tpathLength: [0, 1],\r\n\t\t\t\topacity: [0.6, 1],\r\n\t\t\t\ttransition: { duration: 0.5, ease: \"easeInOut\", delay: 0.05 },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst toothSnap: Variants = {\r\n\t\t\tnormal: { x: 0, y: 0, opacity: 1 },\r\n\t\t\tanimate: {\r\n\t\t\t\tx: [0.4, 0],\r\n\t\t\t\ty: [0, -0.4, 0],\r\n\t\t\t\topacity: [0.5, 1],\r\n\t\t\t\ttransition: { duration: 0.45, ease: \"easeOut\", delay: 0.12 },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst miniLink: Variants = {\r\n\t\t\tnormal: { scale: 1, rotate: 0, originX: 12, originY: 12 },\r\n\t\t\tanimate: {\r\n\t\t\t\tscale: [1, 1.06, 1],\r\n\t\t\t\trotate: [0, -10, 0],\r\n\t\t\t\ttransition: { duration: 0.5, ease: \"easeInOut\", delay: 0.18 },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst sparkTrail: Variants = {\r\n\t\t\tnormal: { pathLength: 0, opacity: 0 },\r\n\t\t\tanimate: {\r\n\t\t\t\tpathLength: [0, 1],\r\n\t\t\t\topacity: [0, 1, 0],\r\n\t\t\t\ttransition: { duration: 0.4, ease: \"easeOut\", delay: 0.36 },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<motion.div\r\n\t\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\r\n\t\t\t\tonMouseEnter={handleEnter}\r\n\t\t\t\tonMouseLeave={handleLeave}\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t<motion.svg\r\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\twidth={size}\r\n\t\t\t\t\theight={size}\r\n\t\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\tstrokeWidth=\"2\"\r\n\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t\tstrokeLinejoin=\"round\"\r\n\t\t\t\t\tclassName=\"lucide lucide-key-square-icon lucide-key-square\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<motion.g variants={settle} initial=\"normal\" animate={controls}>\r\n\t\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\t\td=\"M12.4 2.7a2.5 2.5 0 0 1 3.4 0l5.5 5.5a2.5 2.5 0 0 1 0 3.4l-3.7 3.7a2.5 2.5 0 0 1-3.4 0L8.7 9.8a2.5 2.5 0 0 1 0-3.4z\"\r\n\t\t\t\t\t\t\tvariants={linkPulse}\r\n\t\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\t\td=\"m14 7 3 3\"\r\n\t\t\t\t\t\t\tvariants={miniLink}\r\n\t\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\t\td=\"m9.4 10.6-6.814 6.814A2 2 0 0 0 2 18.828V21a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h1a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h.172a2 2 0 0 0 1.414-.586l.814-.814\"\r\n\t\t\t\t\t\t\tvariants={toothSnap}\r\n\t\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\t\td=\"M10.1 13.9 L12.2 12.2\"\r\n\t\t\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\t\t\tstrokeWidth=\"1.4\"\r\n\t\t\t\t\t\t\tvariants={sparkTrail}\r\n\t\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\t\tanimate={sparkControls}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</motion.g>\r\n\t\t\t\t</motion.svg>\r\n\t\t\t</motion.div>\r\n\t\t);\r\n\t},\r\n);\r\n\r\nKeySquareIcon.displayName = \"KeySquareIcon\";\r\nexport { KeySquareIcon };\r\n",
      "type": "registry:ui"
    }
  ]
}