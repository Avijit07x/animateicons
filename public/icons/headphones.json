{
  "name": "headphones",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "keywords": [
    "music",
    "audio",
    "sound",
    "listen",
    "headset",
    "monitor"
  ],
  "files": [
    {
      "path": "HeadphonesIcon.tsx",
      "content": "\"use client\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\r\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\r\n\r\nexport interface HeadphonesIconHandle {\r\n\tstartAnimation: () => void;\r\n\tstopAnimation: () => void;\r\n}\r\n\r\ninterface HeadphonesIconProps extends HTMLMotionProps<\"div\"> {\r\n\tsize?: number;\r\n}\r\n\r\nconst HeadphonesIcon = forwardRef<HeadphonesIconHandle, HeadphonesIconProps>(\r\n\t({ onMouseEnter, onMouseLeave, className, size = 28, ...props }, ref) => {\r\n\t\tconst controls = useAnimation();\r\n\t\tconst reduced = useReducedMotion();\r\n\t\tconst isControlled = useRef(false);\r\n\r\n\t\tuseImperativeHandle(ref, () => {\r\n\t\t\tisControlled.current = true;\r\n\t\t\treturn {\r\n\t\t\t\tstartAnimation: () =>\r\n\t\t\t\t\treduced ? controls.start(\"normal\") : controls.start(\"animate\"),\r\n\t\t\t\tstopAnimation: () => controls.start(\"normal\"),\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tconst handleEnter = useCallback(\r\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\r\n\t\t\t\tif (reduced) return;\r\n\t\t\t\tif (!isControlled.current) controls.start(\"animate\");\r\n\t\t\t\telse onMouseEnter?.(e as any);\r\n\t\t\t},\r\n\t\t\t[controls, reduced, onMouseEnter],\r\n\t\t);\r\n\r\n\t\tconst handleLeave = useCallback(\r\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\r\n\t\t\t\tif (!isControlled.current) controls.start(\"normal\");\r\n\t\t\t\telse onMouseLeave?.(e as any);\r\n\t\t\t},\r\n\t\t\t[controls, onMouseLeave],\r\n\t\t);\r\n\r\n\t\tconst headphonesVariants: Variants = {\r\n\t\t\tnormal: { rotate: 0, scale: 1 },\r\n\t\t\tanimate: {\r\n\t\t\t\tscale: [1, 1.1, 0.95, 1],\r\n\t\t\t\trotate: [0, -3, 3, -2, 0],\r\n\t\t\t\ttransition: { duration: 1.2, ease: \"easeInOut\", repeat: 0 },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst earcupVariants: Variants = {\r\n\t\t\tnormal: { scale: 1, opacity: 1 },\r\n\t\t\tanimate: {\r\n\t\t\t\tscale: [1, 1.2, 0.9, 1],\r\n\t\t\t\topacity: [1, 0.7, 1],\r\n\t\t\t\ttransition: { duration: 0.9, ease: \"easeInOut\", repeat: 0 },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<motion.div\r\n\t\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\r\n\t\t\t\tonMouseEnter={handleEnter}\r\n\t\t\t\tonMouseLeave={handleLeave}\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t<motion.svg\r\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\twidth={size}\r\n\t\t\t\t\theight={size}\r\n\t\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\tstrokeWidth=\"2\"\r\n\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t\tstrokeLinejoin=\"round\"\r\n\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\tvariants={headphonesVariants}\r\n\t\t\t\t>\r\n\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\td=\"M3 14h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2H5a2 \r\n            2 0 0 1-2-2v-7a9 9 0 0 1 18 0v7a2 \r\n            2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 \r\n            2 0 0 1 2-2h3\"\r\n\t\t\t\t\t\tvariants={earcupVariants}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</motion.svg>\r\n\t\t\t</motion.div>\r\n\t\t);\r\n\t},\r\n);\r\n\r\nHeadphonesIcon.displayName = \"HeadphonesIcon\";\r\nexport { HeadphonesIcon };\r\n",
      "type": "registry:ui"
    }
  ]
}