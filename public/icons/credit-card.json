{
  "name": "credit-card",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "keywords": [
    "payment",
    "card",
    "debit",
    "credit",
    "money",
    "finance",
    "visa",
    "mastercard",
    "amex",
    "stripe",
    "paypal"
  ],
  "files": [
    {
      "path": "CreditCardIcon.tsx",
      "content": "\"use client\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\r\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\r\n\r\nexport interface CardHandle {\r\n\tstartAnimation: () => void;\r\n\tstopAnimation: () => void;\r\n}\r\n\r\ninterface CardProps extends HTMLMotionProps<\"div\"> {\r\n\tsize?: number;\r\n}\r\n\r\nconst CreditCardIcon = forwardRef<CardHandle, CardProps>(\r\n\t({ onMouseEnter, onMouseLeave, className, size = 28, ...props }, ref) => {\r\n\t\tconst controls = useAnimation();\r\n\t\tconst stripeControls = useAnimation();\r\n\t\tconst swipeControls = useAnimation();\r\n\t\tconst reduced = useReducedMotion();\r\n\t\tconst isControlled = useRef(false);\r\n\r\n\t\tuseImperativeHandle(ref, () => {\r\n\t\t\tisControlled.current = true;\r\n\t\t\treturn {\r\n\t\t\t\tstartAnimation: () => {\r\n\t\t\t\t\tif (reduced) {\r\n\t\t\t\t\t\tcontrols.start(\"normal\");\r\n\t\t\t\t\t\tstripeControls.start(\"normal\");\r\n\t\t\t\t\t\tswipeControls.start(\"normal\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcontrols.start(\"animate\");\r\n\t\t\t\t\t\tstripeControls.start(\"animate\");\r\n\t\t\t\t\t\tswipeControls.start(\"animate\");\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tstopAnimation: () => {\r\n\t\t\t\t\tcontrols.start(\"normal\");\r\n\t\t\t\t\tstripeControls.start(\"normal\");\r\n\t\t\t\t\tswipeControls.start(\"normal\");\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tconst handleEnter = useCallback(\r\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\r\n\t\t\t\tif (reduced) return;\r\n\t\t\t\tif (!isControlled.current) {\r\n\t\t\t\t\tcontrols.start(\"animate\");\r\n\t\t\t\t\tstripeControls.start(\"animate\");\r\n\t\t\t\t\tswipeControls.start(\"animate\");\r\n\t\t\t\t} else onMouseLeave?.(e as any);\r\n\t\t\t},\r\n\t\t\t[controls, stripeControls, swipeControls],\r\n\t\t);\r\n\r\n\t\tconst handleLeave = useCallback(\r\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\r\n\t\t\t\tif (!isControlled.current) {\r\n\t\t\t\t\tcontrols.start(\"normal\");\r\n\t\t\t\t\tstripeControls.start(\"normal\");\r\n\t\t\t\t\tswipeControls.start(\"normal\");\r\n\t\t\t\t} else onMouseLeave?.(e as any);\r\n\t\t\t},\r\n\t\t\t[controls, stripeControls, swipeControls],\r\n\t\t);\r\n\r\n\t\tconst cardTilt: Variants = {\r\n\t\t\tnormal: { rotate: 0, scale: 1, x: 0, y: 0 },\r\n\t\t\tanimate: {\r\n\t\t\t\trotate: [0, -4, 2, 0],\r\n\t\t\t\tscale: [1, 1.02, 1],\r\n\t\t\t\tx: [0, -0.4, 0],\r\n\t\t\t\ty: [0, -0.3, 0],\r\n\t\t\t\ttransition: { duration: 0.6, ease: \"easeInOut\" },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst stripeSlide: Variants = {\r\n\t\t\tnormal: { x: 0, opacity: 1 },\r\n\t\t\tanimate: {\r\n\t\t\t\tx: [-2, 0],\r\n\t\t\t\topacity: [0.7, 1],\r\n\t\t\t\ttransition: { duration: 0.4, ease: \"easeOut\", delay: 0.08 },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst swipeLine: Variants = {\r\n\t\t\tnormal: { pathLength: 0, opacity: 0 },\r\n\t\t\tanimate: {\r\n\t\t\t\tpathLength: [0, 1],\r\n\t\t\t\topacity: [0, 1, 0.9],\r\n\t\t\t\ttransition: { duration: 0.5, ease: \"easeInOut\", delay: 0.18 },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst embossPulse: Variants = {\r\n\t\t\tnormal: { scale: 1 },\r\n\t\t\tanimate: {\r\n\t\t\t\tscale: [1, 1.035, 1],\r\n\t\t\t\ttransition: { duration: 0.28, ease: \"easeOut\", delay: 0.3 },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<motion.div\r\n\t\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\r\n\t\t\t\tonMouseEnter={handleEnter}\r\n\t\t\t\tonMouseLeave={handleLeave}\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t<motion.svg\r\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\twidth={size}\r\n\t\t\t\t\theight={size}\r\n\t\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\tstrokeWidth=\"2\"\r\n\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t\tstrokeLinejoin=\"round\"\r\n\t\t\t\t\tclassName=\"lucide lucide-credit-card-icon lucide-credit-card\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<motion.g variants={cardTilt} initial=\"normal\" animate={controls}>\r\n\t\t\t\t\t\t<motion.rect\r\n\t\t\t\t\t\t\twidth=\"20\"\r\n\t\t\t\t\t\t\theight=\"14\"\r\n\t\t\t\t\t\t\tx=\"2\"\r\n\t\t\t\t\t\t\ty=\"5\"\r\n\t\t\t\t\t\t\trx=\"2\"\r\n\t\t\t\t\t\t\tvariants={embossPulse}\r\n\t\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<motion.line\r\n\t\t\t\t\t\t\tx1=\"2\"\r\n\t\t\t\t\t\t\tx2=\"22\"\r\n\t\t\t\t\t\t\ty1=\"10\"\r\n\t\t\t\t\t\t\ty2=\"10\"\r\n\t\t\t\t\t\t\tvariants={stripeSlide}\r\n\t\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\t\tanimate={stripeControls}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<motion.path\r\n\t\t\t\t\t\t\td=\"M5 15 H15\"\r\n\t\t\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\t\t\tstrokeWidth=\"1.5\"\r\n\t\t\t\t\t\t\tvariants={swipeLine}\r\n\t\t\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\t\t\tanimate={swipeControls}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</motion.g>\r\n\t\t\t\t</motion.svg>\r\n\t\t\t</motion.div>\r\n\t\t);\r\n\t},\r\n);\r\n\r\nCreditCardIcon.displayName = \"CreditCardIcon\";\r\nexport { CreditCardIcon };\r\n",
      "type": "registry:ui"
    }
  ]
}