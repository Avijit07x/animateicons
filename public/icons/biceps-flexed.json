{
  "name": "biceps-flexed",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "keywords": [
    "arm",
    "muscle",
    "strong",
    "working out",
    "athletic",
    "toned",
    "muscular",
    "forelimb",
    "curled"
  ],
  "files": [
    {
      "path": "BicepsFlexedIcon.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport type { HTMLMotionProps } from \"motion/react\";\nimport { motion, useAnimation } from \"motion/react\";\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\n\nexport interface BicepsFlexedIconHandle {\n\tstartAnimation: () => void;\n\tstopAnimation: () => void;\n}\n\ninterface BicepsFlexedIconProps extends HTMLMotionProps<\"div\"> {\n\tsize?: number;\n}\n\nconst BicepsFlexedIcon = forwardRef<\n\tBicepsFlexedIconHandle,\n\tBicepsFlexedIconProps\n>(({ onMouseEnter, onMouseLeave, className, size = 28, ...props }, ref) => {\n\tconst controls = useAnimation();\n\tconst isControlledRef = useRef(false);\n\n\tuseImperativeHandle(ref, () => {\n\t\tisControlledRef.current = true;\n\t\treturn {\n\t\t\tstartAnimation: () => controls.start(\"animate\"),\n\t\t\tstopAnimation: () => controls.start(\"normal\"),\n\t\t};\n\t});\n\n\tconst handleMouseEnter = useCallback(\n\t\t(e: React.MouseEvent<HTMLDivElement>) => {\n\t\t\tif (!isControlledRef.current) {\n\t\t\t\tcontrols.start(\"animate\");\n\t\t\t} else {\n\t\t\t\tonMouseEnter?.(e);\n\t\t\t}\n\t\t},\n\t\t[controls, onMouseEnter],\n\t);\n\n\tconst handleMouseLeave = useCallback(\n\t\t(e: React.MouseEvent<HTMLDivElement>) => {\n\t\t\tif (!isControlledRef.current) {\n\t\t\t\tcontrols.start(\"normal\");\n\t\t\t} else {\n\t\t\t\tonMouseLeave?.(e);\n\t\t\t}\n\t\t},\n\t\t[controls, onMouseLeave],\n\t);\n\n\treturn (\n\t\t<motion.div\n\t\t\tclassName={cn(className)}\n\t\t\tonMouseEnter={handleMouseEnter}\n\t\t\tonMouseLeave={handleMouseLeave}\n\t\t\t{...props}\n\t\t>\n\t\t\t<motion.svg\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\twidth={size}\n\t\t\t\theight={size}\n\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\tfill=\"none\"\n\t\t\t\tstroke=\"currentColor\"\n\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\tvariants={{\n\t\t\t\t\tnormal: { rotate: 0, scale: 1, transition: { duration: 0.3 } },\n\t\t\t\t\tanimate: {\n\t\t\t\t\t\trotate: [0, -10, 10, 0],\n\t\t\t\t\t\tscale: [1, 1.2, 1.2, 1],\n\t\t\t\t\t\ttransition: { duration: 0.6 },\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t\tanimate={controls}\n\t\t\t\tinitial=\"normal\"\n\t\t\t>\n\t\t\t\t<path d=\"M12.409 13.017A5 5 0 0 1 22 15c0 3.866-4 7-9 7-4.077 0-8.153-.82-10.371-2.462-.426-.316-.631-.832-.62-1.362C2.118 12.723 2.627 2 10 2a3 3 0 0 1 3 3 2 2 0 0 1-2 2c-1.105 0-1.64-.444-2-1\" />\n\t\t\t\t<path d=\"M15 14a5 5 0 0 0-7.584 2\" />\n\t\t\t\t<path d=\"M9.964 6.825C8.019 7.977 9.5 13 8 15\" />\n\t\t\t</motion.svg>\n\t\t</motion.div>\n\t);\n});\n\nBicepsFlexedIcon.displayName = \"BicepsFlexedIcon\";\nexport { BicepsFlexedIcon };\n",
      "type": "registry:ui"
    }
  ]
}