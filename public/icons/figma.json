{
  "name": "figma",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "keywords": [
    "logo",
    "design",
    "tool",
    "ui/ux",
    "prototype"
  ],
  "files": [
    {
      "path": "FigmaIcon.tsx",
      "content": "\"use client\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\r\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\r\n\r\nexport interface FigmaIconHandle {\r\n\tstartAnimation: () => void;\r\n\tstopAnimation: () => void;\r\n}\r\n\r\ninterface FigmaIconProps extends HTMLMotionProps<\"div\"> {\r\n\tsize?: number;\r\n}\r\n\r\nconst FigmaIcon = forwardRef<FigmaIconHandle, FigmaIconProps>(\r\n\t({ onMouseEnter, onMouseLeave, className, size = 28, ...props }, ref) => {\r\n\t\tconst controls = useAnimation();\r\n\t\tconst reduced = useReducedMotion();\r\n\t\tconst isControlled = useRef(false);\r\n\r\n\t\tuseImperativeHandle(ref, () => {\r\n\t\t\tisControlled.current = true;\r\n\t\t\treturn {\r\n\t\t\t\tstartAnimation: () =>\r\n\t\t\t\t\treduced ? controls.start(\"normal\") : controls.start(\"animate\"),\r\n\t\t\t\tstopAnimation: () => controls.start(\"normal\"),\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tconst handleEnter = useCallback(\r\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\r\n\t\t\t\tif (reduced) return;\r\n\t\t\t\tif (!isControlled.current) controls.start(\"animate\");\r\n\t\t\t\telse onMouseEnter?.(e as any);\r\n\t\t\t},\r\n\t\t\t[controls, reduced, onMouseEnter],\r\n\t\t);\r\n\r\n\t\tconst handleLeave = useCallback(\r\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\r\n\t\t\t\tif (!isControlled.current) controls.start(\"normal\");\r\n\t\t\t\telse onMouseLeave?.(e as any);\r\n\t\t\t},\r\n\t\t\t[controls, onMouseLeave],\r\n\t\t);\r\n\r\n\t\tconst iconVariants: Variants = {\r\n\t\t\tnormal: { scale: 1, rotate: 0 },\r\n\t\t\tanimate: {\r\n\t\t\t\tscale: [1, 1.05, 0.95, 1],\r\n\t\t\t\trotate: [0, -2, 2, 0],\r\n\t\t\t\ttransition: { duration: 1.4, repeat: 0, ease: \"easeInOut\" },\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst shapeVariants: Variants = {\r\n\t\t\tnormal: { pathLength: 1, opacity: 1 },\r\n\t\t\tanimate: (i: number) => ({\r\n\t\t\t\tpathLength: [0, 1],\r\n\t\t\t\topacity: [0.6, 1],\r\n\t\t\t\ttransition: {\r\n\t\t\t\t\tduration: 1.2,\r\n\t\t\t\t\tease: \"easeInOut\",\r\n\t\t\t\t\trepeat: 0,\r\n\t\t\t\t\tdelay: i * 0.25,\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t};\r\n\r\n\t\tconst paths = [\r\n\t\t\t\"M5 5.5A3.5 3.5 0 0 1 8.5 2H12v7H8.5A3.5 3.5 0 0 1 5 5.5z\",\r\n\t\t\t\"M12 2h3.5a3.5 3.5 0 1 1 0 7H12V2z\",\r\n\t\t\t\"M12 12.5a3.5 3.5 0 1 1 7 0 3.5 3.5 0 1 1-7 0z\",\r\n\t\t\t\"M5 19.5A3.5 3.5 0 0 1 8.5 16H12v3.5a3.5 3.5 0 1 1-7 0z\",\r\n\t\t\t\"M5 12.5A3.5 3.5 0 0 1 8.5 9H12v7H8.5A3.5 3.5 0 0 1 5 12.5z\",\r\n\t\t];\r\n\r\n\t\treturn (\r\n\t\t\t<motion.div\r\n\t\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\r\n\t\t\t\tonMouseEnter={handleEnter}\r\n\t\t\t\tonMouseLeave={handleLeave}\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t<motion.svg\r\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\twidth={size}\r\n\t\t\t\t\theight={size}\r\n\t\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\tstrokeWidth=\"2\"\r\n\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t\tstrokeLinejoin=\"round\"\r\n\t\t\t\t\tanimate={controls}\r\n\t\t\t\t\tinitial=\"normal\"\r\n\t\t\t\t\tvariants={iconVariants}\r\n\t\t\t\t>\r\n\t\t\t\t\t{paths.map((d, i) => (\r\n\t\t\t\t\t\t<motion.path key={i} d={d} variants={shapeVariants} custom={i} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</motion.svg>\r\n\t\t\t</motion.div>\r\n\t\t);\r\n\t},\r\n);\r\n\r\nFigmaIcon.displayName = \"FigmaIcon\";\r\nexport { FigmaIcon };\r\n",
      "type": "registry:ui"
    }
  ]
}